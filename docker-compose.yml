version: '3.2'

services:
  db:
    container_name: postgres_db
    restart: 'no'
    image: postgres:14.2
    environment:
      POSTGRES_DB: lcfs
      POSTGRES_USER: lcfs
      POSTGRES_PASSWORD: development_only
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    container_name: redis_cache
    restart: 'no'
    image: bitnami/redis:6.2.5
    environment:
      REDIS_PASSWORD: development_only
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/bitnami/redis/data

  backend:
    container_name: lcfs_backend
    restart: 'no'
    build:
      context: ./backend
      dockerfile: 'Dockerfile'
      target: dev
    volumes:
      - type: bind
        source: ./backend
        target: /app
        consistency: cached
    environment:
      LCFS_DB_HOST: db
      LCFS_DB_PORT: 5432
      LCFS_DB_USER: lcfs
      LCFS_DB_PASS: development_only
      LCFS_DB_BASE: lcfs
      LCFS_REDIS_HOST: redis
      LCFS_REDIS_PORT: 6379
      LCFS_REDIS_PASSWORD: development_only
      LCFS_RELOAD: true
      APP_ENVIRONMENT: dev
    ports:
      - '8000:8000' # Application port
      - '5678:5678' # Debugger port
    depends_on:
      - db
      - redis

  frontend:
    container_name: lcfs_frontend
    restart: 'no'
    build:
      dockerfile: Dockerfile.dev
      context: ./frontend
    command: npm run dev --force
    ports:
      - 3000:3000
    volumes:
      - type: bind
        source: ./frontend
        target: /app
      - type: volume
        source: node_modules
        target: /app/node_modules

volumes:
  postgres_data:
    name: postgres_data
  redis_data:
    name: redis_data
  node_modules:
    name: node_modules
