services:
# configuration manager for NiFi
  zookeeper:
    hostname: myzookeeper
    container_name: zookeeper_container_persistent
    image: 'bitnami/zookeeper:3.9.2-debian-12-r14'
    restart: on-failure
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - shared_network
# version control for nifi flows
  registry:
    hostname: lcfs-registry
    container_name: nifi_registry
    image: 'apache/nifi-registry:1.27.0'
    restart: on-failure
    ports:
      - "18080:18080"
    environment:
      - LOG_LEVEL=INFO
      - NIFI_REGISTRY_DB_DIR=/opt/nifi-registry/nifi-registry-current/database
      - NIFI_REGISTRY_FLOW_PROVIDER=file
      - NIFI_REGISTRY_FLOW_STORAGE_DIR=/opt/nifi-registry/nifi-registry-current/flow_storage
    volumes:
      - ./database:/opt/nifi-registry/nifi-registry-current/database
      - ./flow_storage:/opt/nifi-registry/nifi-registry-current/flow_storage
    networks:
      - shared_network
# data extraction, transformation and load service
  nifi:
    hostname: nifi
    container_name: nifi
    image: 'apache/nifi:1.27.0'
    restart: on-failure
    ports:
      - '8091:8080'
    environment:
      - NIFI_WEB_HTTP_PORT=8080
      - NIFI_CLUSTER_IS_NODE=true
      - NIFI_CLUSTER_NODE_PROTOCOL_PORT=8082
      - NIFI_ZK_CONNECT_STRING=myzookeeper:2181
      - NIFI_ELECTION_MAX_WAIT=30 sec
      - NIFI_SENSITIVE_PROPS_KEY='12345678901234567890A'
    healthcheck:
      test: "${DOCKER_HEALTHCHECK_TEST:-curl localhost:8091/nifi/}"
      interval: "60s"
      timeout: "3s"
      start_period: "5s"
      retries: 5
    volumes:
      - ./nifi/database_repository:/opt/nifi/nifi-current/database_repository
      - ./nifi/flowfile_repository:/opt/nifi/nifi-current/flowfile_repository
      - ./nifi/content_repository:/opt/nifi/nifi-current/content_repository
      - ./nifi/provenance_repository:/opt/nifi/nifi-current/provenance_repository
      - ./nifi/state:/opt/nifi/nifi-current/state
      - ./nifi/logs:/opt/nifi/nifi-current/logs
      - ./jdbc_drivers/postgresql-42.7.3.jar:/opt/nifi/nifi-current/lib/postgresql-42.7.3.jar
      - ./nifi/conf:/opt/nifi/nifi-current/conf
      - ./nifi_scripts:/opt/nifi/nifi-current/nifi_scripts
      - ./nifi_output:/opt/nifi/nifi-current/nifi_output
    networks:
      - shared_network
# TFRS database loaded with TFRS data
  tfrs:
    image: postgres:14.2
    container_name: tfrs
    environment:
      POSTGRES_USER: tfrs
      POSTGRES_PASSWORD: development_only
      POSTGRES_DB: tfrs
    ports:
      - "5435:5432"
    volumes:
      - tfrs_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - shared_network

volumes:
  tfrs_data:
  nifi_output:
  nifi_scripts:

networks:
  shared_network:
    external: true
    driver: bridge