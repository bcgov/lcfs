"""Add kwh_usage to final_supply_equipment

Revision ID: b659816d0a86
Revises: bf26425d2a14
Create Date: 2024-11-01 17:28:20.854410

"""

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "b659816d0a86"
down_revision = "bf26425d2a14"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum("Single port", "Dual port", name="ports_enum").create(op.get_bind())
    op.create_table(
        "end_user_type",
        sa.Column(
            "end_user_type_id",
            sa.Integer(),
            autoincrement=True,
            nullable=False,
            comment="The unique identifier for the end user type.",
        ),
        sa.Column(
            "type_name",
            sa.String(),
            nullable=False,
            comment="The name of the end user type.",
        ),
        sa.Column(
            "intended_use",
            sa.Boolean(),
            nullable=False,
            server_default=sa.text("true"),
            comment="Indicates if this user type is active.",
        ),
        sa.Column(
            "create_date",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
            comment="Date and time (UTC) when the physical record was created in the database.",
        ),
        sa.Column(
            "update_date",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
            comment="Date and time (UTC) when the physical record was updated in the database.",
        ),
        sa.PrimaryKeyConstraint("end_user_type_id", name=op.f("pk_end_user_type")),
        sa.UniqueConstraint("type_name", name=op.f("uq_end_user_type_type_name")),
        comment="Types of intended users for supply equipment",
    )
    op.create_table(
        "final_supply_intended_user_association",
        sa.Column("final_supply_equipment_id", sa.Integer(), nullable=False),
        sa.Column("end_user_type_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["end_user_type_id"],
            ["end_user_type.end_user_type_id"],
            name=op.f(
                "fk_final_supply_intended_user_association_end_user_type_id_end_user_type"
            ),
        ),
        sa.ForeignKeyConstraint(
            ["final_supply_equipment_id"],
            ["final_supply_equipment.final_supply_equipment_id"],
            name=op.f(
                "fk_final_supply_intended_user_association_final_supply_equipment_id_final_supply_equipment"
            ),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint(
            "final_supply_equipment_id",
            "end_user_type_id",
            name=op.f("pk_final_supply_intended_user_association"),
        ),
    )
    op.add_column(
        "final_supply_equipment",
        sa.Column(
            "kwh_usage",
            sa.Float(precision=2),
            nullable=True,
            comment="Optional kWh usage with up to 2 decimal places.",
        ),
    )
    op.add_column(
        "final_supply_equipment",
        sa.Column(
            "model",
            sa.String(),
            nullable=True,
            comment="Optional model of the equipment, following 'Make' field.",
        ),
    )
    op.add_column(
        "final_supply_equipment",
        sa.Column(
            "ports",
            postgresql.ENUM(
                "Single port", "Dual port", name="ports_enum", create_type=False
            ),
            nullable=True,
            comment="Port type with options 'Single port' and 'Dual port.'",
        ),
    )

    # Insert initial data into end_user_type
    op.execute(
        """
        INSERT INTO end_user_type (type_name) VALUES
        ('Multi-unit residential building'),
        ('Fleet'),
        ('Public'),
        ('Employee');
        """
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("final_supply_equipment", "ports")
    op.drop_column("final_supply_equipment", "model")
    op.drop_column("final_supply_equipment", "kwh_usage")
    op.drop_table("final_supply_intended_user_association")
    op.drop_table("end_user_type")
    sa.Enum("Single port", "Dual port", name="ports_enum").drop(op.get_bind())
    # ### end Alembic commands ###

