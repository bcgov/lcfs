"""Add Versioning to Notional Transfers

Revision ID: 0775a141d335
Revises: 3c07f891435d
Create Date: 2024-11-26 12:57:44.825449

"""

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "0775a141d335"
down_revision = "3c07f891435d"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "notional_transfer",
        sa.Column(
            "group_uuid",
            sa.String(length=36),
            nullable=True,
            comment="UUID that groups all versions of a record series",
        ),
    )
    op.add_column(
        "notional_transfer",
        sa.Column(
            "version",
            sa.Integer(),
            nullable=False,
            server_default="0",
            comment="Version number of the record",
        ),
    )
    op.add_column(
        "notional_transfer",
        sa.Column(
            "user_type",
            postgresql.ENUM(
                "SUPPLIER", "GOVERNMENT", name="usertypeenum", create_type=False
            ),
            nullable=False,
            server_default=sa.text("'SUPPLIER'"),
            comment="Indicates whether the record was created/modified by a supplier or government user",
        ),
    )
    op.add_column(
        "notional_transfer",
        sa.Column(
            "action_type",
            postgresql.ENUM(
                "CREATE", "UPDATE", "DELETE", name="actiontypeenum", create_type=False
            ),
            server_default=sa.text("'CREATE'"),
            nullable=True,
            comment="Action type for this record",
        ),
    )

    # Update existing records with generated UUIDs
    connection = op.get_bind()

    # Update notional_transfer table
    fuel_exports = connection.execute(
        sa.text("SELECT notional_transfer_id FROM notional_transfer WHERE group_uuid IS NULL")
    ).fetchall()
    for export in fuel_exports:
        export_id = export[0]
        connection.execute(
            sa.text(
                "UPDATE notional_transfer SET group_uuid = :uuid WHERE notional_transfer_id = :export_id"
            ),
            {"uuid": str(uuid.uuid4()), "export_id": export_id},
        )

    # Alter the column to be non-nullable
    op.alter_column(
        "notional_transfer",
        "group_uuid",
        existing_type=sa.String(length=36),
        nullable=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("notional_transfer", "action_type")
    op.drop_column("notional_transfer", "user_type")
    op.drop_column("notional_transfer", "version")
    op.drop_column("notional_transfer", "group_uuid")
    # ### end Alembic commands ###
