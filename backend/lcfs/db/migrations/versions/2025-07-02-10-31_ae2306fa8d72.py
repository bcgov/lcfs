"""Add fuel code versioning

Revision ID: ae2306fa8d72
Revises: 2e2f6f7ff391
Create Date: 2025-07-02 10:31:37.335578

"""

import sqlalchemy as sa
from alembic import op
from alembic_postgresql_enum import TableReference
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "ae2306fa8d72"
down_revision = "2e2f6f7ff391"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic ###
    op.create_table(
        "fuel_code_history",
        sa.Column(
            "fuel_code_history_id",
            sa.Integer(),
            autoincrement=True,
            nullable=False,
            comment="Unique identifier for the history record",
        ),
        sa.Column(
            "fuel_code_id",
            sa.Integer(),
            nullable=False,
            comment="Reference to the fuel code",
        ),
        sa.Column(
            "fuel_status_id", sa.Integer(), nullable=True, comment="Fuel code status"
        ),
        sa.Column(
            "fuel_code_snapshot",
            sa.JSON(),
            nullable=True,
            comment="Complete snapshot of fuel code data at time of change",
        ),
        sa.Column(
            "create_date",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
            comment="Date and time (UTC) when the physical record was created in the database.",
        ),
        sa.Column(
            "update_date",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
            comment="Date and time (UTC) when the physical record was updated in the database. It will be the same as the create_date until the record is first updated after creation.",
        ),
        sa.Column(
            "create_user",
            sa.String(),
            nullable=True,
            comment="The user who created this record in the database.",
        ),
        sa.Column(
            "update_user",
            sa.String(),
            nullable=True,
            comment="The user who last updated this record in the database.",
        ),
        sa.Column(
            "group_uuid",
            sa.String(length=36),
            nullable=False,
            comment="UUID that groups all versions of a record series",
        ),
        sa.Column(
            "version",
            sa.Integer(),
            nullable=False,
            default=0,
            comment="Version number of the record",
        ),
        sa.Column(
            "action_type",
            postgresql.ENUM(
                "CREATE", "UPDATE", "DELETE", name="actiontypeenum", create_type=False
            ),
            server_default=sa.text("'CREATE'"),
            nullable=False,
            comment="Action type for this record",
        ),
        sa.ForeignKeyConstraint(
            ["fuel_code_id"],
            ["fuel_code.fuel_code_id"],
            name=op.f("fk_fuel_code_history_fuel_code_id_fuel_code"),
        ),
        sa.ForeignKeyConstraint(
            ["fuel_status_id"],
            ["fuel_code_status.fuel_code_status_id"],
            name=op.f("fk_fuel_code_history_fuel_status_id_fuel_code_status"),
        ),
        sa.PrimaryKeyConstraint(
            "fuel_code_history_id", name=op.f("pk_fuel_code_history")
        ),
        comment="Audit trail for all fuel code changes",
    )
    op.add_column(
        "fuel_code",
        sa.Column(
            "group_uuid",
            sa.String(length=36),
            nullable=True,
            comment="UUID that groups all versions of a record series",
        ),
    )
    op.add_column(
        "fuel_code",
        sa.Column(
            "version",
            sa.Integer(),
            nullable=True,
            default=0,
            server_default="0",
            comment="Version number of the record",
        ),
    )
    op.add_column(
        "fuel_code",
        sa.Column(
            "action_type",
            postgresql.ENUM(
                "CREATE", "UPDATE", "DELETE", name="actiontypeenum", create_type=False
            ),
            server_default=sa.text("'CREATE'"),
            nullable=True,
            comment="Action type for this record",
        ),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic ###
    op.drop_column("fuel_code", "action_type")
    op.drop_column("fuel_code", "version")
    op.drop_column("fuel_code", "group_uuid")
    op.drop_table("fuel_code_history")
    # ### end Alembic commands ###
