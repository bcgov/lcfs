"""empty message

Revision ID: 6d8f8d37778e
Revises: 
Create Date: 2023-06-05 12:51:49.332296

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '6d8f8d37778e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('organization',
    sa.Column('create_user', sa.String(), nullable=True, comment='The user who created this record in the database.'),
    sa.Column('create_date', sa.DateTime(), nullable=True, comment='Date and time (UTC) when the physical record was created in the database.'),
    sa.Column('update_user', sa.String(), nullable=True, comment='The user who last updated this record in the database.'),
    sa.Column('update_date', sa.DateTime(), nullable=True, comment='Date and time (UTC) when the physical record was updated in the database. It will be the same as the create_date until the record is first updated after creation.'),
    sa.Column('effective_date', sa.DateTime(), nullable=True, comment='The date and time that the code became valid and could be used.'),
    sa.Column('expiry_date', sa.DateTime(), nullable=True, comment='The date and time after which the code is no longer valid and should not be used.'),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False, comment='Organization Name'),
    sa.PrimaryKeyConstraint('id'),
    comment='Organizations'
    )
    op.create_table('user_login_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('create_date', sa.DateTime(), nullable=True, comment='Date and time (UTC) when the physical record was created in the database.'),
    sa.Column('update_date', sa.DateTime(), nullable=True, comment='Date and time (UTC) when the physical record was updated in the database. It will be the same as the create_date until the record is first updated after creation.'),
    sa.Column('keycloak_email', sa.String(), nullable=False, comment='Keycloak email address to associate on first login.'),
    sa.Column('external_username', sa.String(length=150), nullable=True, comment='BCeID or IDIR username'),
    sa.Column('keycloak_user_id', sa.String(length=150), nullable=True, comment='This is the unique id returned from Keycloak and is the main mapping key between the TFRS user and the Keycloak user. The identity provider type will be appended as a suffix after an @ symbol. For ex. asdf1234@bceidbasic or asdf1234@idir'),
    sa.Column('is_login_successful', sa.Boolean(), nullable=True, comment='True if this login attempt was successful, false on failure.'),
    sa.Column('login_error_message', sa.String(length=500), nullable=True, comment='Error text on unsuccessful login attempt.'),
    sa.PrimaryKeyConstraint('id'),
    comment='Keeps track of all user login attempts'
    )
    op.create_table('user',
    sa.Column('create_user', sa.String(), nullable=True, comment='The user who created this record in the database.'),
    sa.Column('create_date', sa.DateTime(), nullable=True, comment='Date and time (UTC) when the physical record was created in the database.'),
    sa.Column('update_user', sa.String(), nullable=True, comment='The user who last updated this record in the database.'),
    sa.Column('update_date', sa.DateTime(), nullable=True, comment='Date and time (UTC) when the physical record was updated in the database. It will be the same as the create_date until the record is first updated after creation.'),
    sa.Column('effective_date', sa.DateTime(), nullable=True, comment='The date and time that the code became valid and could be used.'),
    sa.Column('expiry_date', sa.DateTime(), nullable=True, comment='The date and time after which the code is no longer valid and should not be used.'),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=150), nullable=False, comment='Login Username'),
    sa.Column('keycloak_user_id', sa.String(length=150), nullable=True, comment='Unique id returned from Keycloak'),
    sa.Column('password', sa.String(length=128), nullable=True, comment='Password hash'),
    sa.Column('email', sa.String(), nullable=True, comment='Primary email address'),
    sa.Column('title', sa.String(length=100), nullable=True, comment='Professional Title'),
    sa.Column('phone', sa.String(length=50), nullable=True, comment='Primary phone number'),
    sa.Column('cell_phone', sa.String(length=50), nullable=True, comment='Mobile phone number'),
    sa.Column('organization_id', sa.Integer(), nullable=True),
    sa.Column('display_name', sa.String(length=500), nullable=True, comment='Displayed name for user'),
    sa.Column('first_name', sa.String(length=30), nullable=True, comment='First name (retrieved from Siteminder'),
    sa.Column('last_name', sa.String(length=150), nullable=True, comment='Last name (retrieved from Siteminder)'),
    sa.Column('is_staff', sa.Boolean(), nullable=False, comment='True if staff user'),
    sa.Column('is_superuser', sa.Boolean(), nullable=False, comment='True if superuser'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='True if can login'),
    sa.Column('date_joined', sa.DateTime(), nullable=True, comment='Date account created'),
    sa.Column('last_login', sa.DateTime(), nullable=True, comment='Last login time'),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username'),
    comment='Users who may access the application'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user')
    op.drop_table('user_login_history')
    op.drop_table('organization')
    # ### end Alembic commands ###
