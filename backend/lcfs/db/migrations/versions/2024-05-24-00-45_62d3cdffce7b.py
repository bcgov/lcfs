"""Provision of the act

Revision ID: 62d3cdffce7b
Revises: 69834c45d1dd
Create Date: 2024-05-24 00:45:21.776337

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "62d3cdffce7b"
down_revision = "69834c45d1dd"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "provision_act",
        sa.Column("provision_act_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=500), nullable=False),
        sa.Column("description", sa.String(length=500), nullable=True),
        sa.Column(
            "create_date",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
            comment="Date and time (UTC) when the physical record was created in the database.",
        ),
        sa.Column(
            "update_date",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
            comment="Date and time (UTC) when the physical record was updated in the database. It will be the same as the create_date until the record is first updated after creation.",
        ),
        sa.Column(
            "create_user",
            sa.String(),
            nullable=True,
            comment="The user who created this record in the database.",
        ),
        sa.Column(
            "update_user",
            sa.String(),
            nullable=True,
            comment="The user who last updated this record in the database.",
        ),
        sa.Column(
            "display_order",
            sa.Integer(),
            nullable=True,
            comment="Relative rank in display sorting order",
        ),
        sa.PrimaryKeyConstraint("provision_act_id"),
        comment="data table for determining carbon intensity needed for for compliance reporting calculation",
    )
    op.add_column(
        "fuel_type", sa.Column("provision_1_act_id", sa.Integer(), nullable=True)
    )
    op.add_column(
        "fuel_type", sa.Column("provision_2_act_id", sa.Integer(), nullable=True)
    )
    op.add_column(
        "fuel_type",
        sa.Column(
            "default_carbon_intensity",
            sa.Float(precision=10, asdecimal=2),
            nullable=True,
            comment="Carbon intensities: default & prescribed (gCO2e/MJ)",
        ),
    )
    op.create_foreign_key(
        None, "fuel_type", "provision_act", ["provision_1_act_id"], ["provision_act_id"]
    )
    op.create_foreign_key(
        None, "fuel_type", "provision_act", ["provision_2_act_id"], ["provision_act_id"]
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "fuel_type", type_="foreignkey")
    op.drop_constraint(None, "fuel_type", type_="foreignkey")
    op.drop_column("fuel_type", "provision_2_act_id")
    op.drop_column("fuel_type", "provision_1_act_id")
    op.drop_table("provision_act")
    # ### end Alembic commands ###
