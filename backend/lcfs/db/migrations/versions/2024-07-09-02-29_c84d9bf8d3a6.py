"""Fuel supply models update

Revision ID: c84d9bf8d3a6
Revises: 5efb1e383006
Create Date: 2024-07-09 02:29:36.956262

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "c84d9bf8d3a6"
down_revision = "5efb1e383006"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "custom_fuel_type",
        sa.Column(
            "fuel_category_id",
            sa.Integer(),
            nullable=False,
            comment="Foreign key to fuel_category table",
        ),
    )
    op.add_column(
        "custom_fuel_type",
        sa.Column(
            "provision_of_the_act_id",
            sa.Integer(),
            nullable=False,
            comment="Foreign key to provision_of_the_act table",
        ),
    )
    op.add_column(
        "custom_fuel_type",
        sa.Column(
            "fuel_code_id",
            sa.Integer(),
            nullable=False,
            comment="Foreign key to fuel_code table",
        ),
    )
    op.add_column(
        "custom_fuel_type",
        sa.Column(
            "unit", sa.String(), nullable=False, comment="Units of fuel quantity"
        ),
    )
    op.add_column(
        "custom_fuel_type",
        sa.Column(
            "energy_density",
            sa.Float(precision=10, asdecimal=2),
            nullable=False,
            comment="Energy density of the fuel",
        ),
    )
    op.create_foreign_key(
        None, "custom_fuel_type", "fuel_code", ["fuel_code_id"], ["fuel_code_id"]
    )
    op.create_foreign_key(
        None,
        "custom_fuel_type",
        "provision_of_the_act",
        ["provision_of_the_act_id"],
        ["provision_of_the_act_id"],
    )
    op.create_foreign_key(
        None,
        "custom_fuel_type",
        "fuel_category",
        ["fuel_category_id"],
        ["fuel_category_id"],
    )
    op.add_column(
        "fuel_supply",
        sa.Column(
            "compliance_units",
            sa.Integer(),
            nullable=True,
            comment="Compliance units for the fuel supply",
        ),
    )
    op.add_column(
        "fuel_supply",
        sa.Column(
            "energy",
            sa.Float(),
            nullable=True,
            comment="Energy content of the fuel supplied",
        ),
    )
    op.alter_column(
        "fuel_supply",
        "fuel_code_id",
        existing_type=sa.INTEGER(),
        nullable=True,
        existing_comment="Foreign key to the fuel code",
    )
    op.drop_column("fuel_supply", "custom_fuel_energy_density")
    op.alter_column(
        "fuel_type",
        "default_carbon_intensity",
        existing_type=sa.REAL(),
        type_=sa.Float(precision=10, asdecimal=2),
        existing_comment="Carbon intensities: default & prescribed (gCO2e/MJ)",
        existing_nullable=True,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "fuel_supply",
        sa.Column(
            "custom_fuel_energy_density",
            sa.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=True,
            comment="Energy density of the custom fuel",
        ),
    )
    op.alter_column(
        "fuel_supply",
        "fuel_code_id",
        existing_type=sa.INTEGER(),
        nullable=False,
        existing_comment="Foreign key to the fuel code",
    )
    op.drop_column("fuel_supply", "energy")
    op.drop_column("fuel_supply", "compliance_units")
    op.drop_constraint(None, "custom_fuel_type", type_="foreignkey")
    op.drop_constraint(None, "custom_fuel_type", type_="foreignkey")
    op.drop_constraint(None, "custom_fuel_type", type_="foreignkey")
    op.drop_column("custom_fuel_type", "energy_density")
    op.drop_column("custom_fuel_type", "unit")
    op.drop_column("custom_fuel_type", "fuel_code_id")
    op.drop_column("custom_fuel_type", "provision_of_the_act_id")
    op.drop_column("custom_fuel_type", "fuel_category_id")
    # ### end Alembic commands ###
