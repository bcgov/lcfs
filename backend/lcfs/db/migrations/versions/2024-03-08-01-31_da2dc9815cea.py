"""add

Revision ID: da2dc9815cea
Revises: 4f19e1f5efba
Create Date: 2024-03-08 01:31:48.279152

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "da2dc9815cea"
down_revision = "4f19e1f5efba"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "transfer_recommendation_status",
        sa.Column(
            "transfer_recommendation_status_id",
            sa.Integer(),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column(
            "status",
            sa.Enum("Record", "Refuse",
                    name="transfer_recommendation_type_enum"),
            nullable=True,
            comment="Transfer Recommendation Status",
        ),
        sa.Column(
            "create_date",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
            comment="Date and time (UTC) when the physical record was created in the database.",
        ),
        sa.Column(
            "update_date",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
            comment="Date and time (UTC) when the physical record was updated in the database. It will be the same as the create_date until the record is first updated after creation.",
        ),
        sa.Column(
            "create_user",
            sa.String(),
            nullable=True,
            comment="The user who created this record in the database.",
        ),
        sa.Column(
            "update_user",
            sa.String(),
            nullable=True,
            comment="The user who last updated this record in the database.",
        ),
        sa.Column(
            "display_order",
            sa.Integer(),
            nullable=True,
            comment="Relative rank in display sorting order",
        ),
        sa.PrimaryKeyConstraint("transfer_recommendation_status_id"),
        comment="Represents a Transfer Recommendation Status",
    )
    op.add_column(
        "transfer", sa.Column("recommendation_status_id",
                              sa.Integer(), nullable=True)
    )
    op.create_foreign_key(
        None,
        "transfer",
        "transfer_recommendation_status",
        ["recommendation_status_id"],
        ["transfer_recommendation_status_id"],
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "transfer", type_="foreignkey")
    op.drop_column("transfer", "recommendation_status_id")
    op.drop_table("transfer_recommendation_status")
    # ### end Alembic commands ###
