"""empty message

Revision ID: 96e71ba9372b
Revises: 6d8f8d37778e
Create Date: 2023-06-09 12:05:54.309671

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "96e71ba9372b"
down_revision = "6d8f8d37778e"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "organization_type",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "type",
            sa.String(length=25),
            nullable=True,
            comment="Enumerated value to describe the organization type.",
        ),
        sa.Column(
            "description",
            sa.String(length=1000),
            nullable=True,
            comment="Description of the organization type. This is the displayed name.",
        ),
        sa.Column(
            "create_date",
            sa.DateTime(),
            nullable=True,
            comment="Date and time (UTC) when the physical record was created in the database.",
        ),
        sa.Column(
            "update_date",
            sa.DateTime(),
            nullable=True,
            comment="Date and time (UTC) when the physical record was updated in the database. It will be the same as the create_date until the record is first updated after creation.",
        ),
        sa.Column(
            "create_user",
            sa.String(),
            nullable=True,
            comment="The user who created this record in the database.",
        ),
        sa.Column(
            "update_user",
            sa.String(),
            nullable=True,
            comment="The user who last updated this record in the database.",
        ),
        sa.Column(
            "effective_date",
            sa.DateTime(),
            nullable=True,
            comment="The date and time that the code became valid and could be used.",
        ),
        sa.Column(
            "expiry_date",
            sa.DateTime(),
            nullable=True,
            comment="The date and time after which the code is no longer valid and should not be used.",
        ),
        sa.Column(
            "expiration_date",
            sa.Date(),
            nullable=True,
            comment="The calendar date the value is no longer valid.",
        ),
        sa.Column(
            "display_order",
            sa.Integer(),
            nullable=True,
            comment="Relative rank in display sorting order",
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("type"),
    )
    op.create_table(
        "organization_actions_type",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "the_type",
            sa.String(length=25),
            nullable=False,
            comment="Enumerated value to describe the organization actions type.",
        ),
        sa.Column(
            "description",
            sa.String(length=1000),
            nullable=True,
            comment="Description of the organization actions type. This is the displayed name.",
        ),
        sa.Column(
            "create_date",
            sa.DateTime(),
            nullable=True,
            comment="Date and time (UTC) when the physical record was created in the database.",
        ),
        sa.Column(
            "update_date",
            sa.DateTime(),
            nullable=True,
            comment="Date and time (UTC) when the physical record was updated in the database. It will be the same as the create_date until the record is first updated after creation.",
        ),
        sa.Column(
            "display_order",
            sa.Integer(),
            nullable=True,
            comment="Relative rank in display sorting order",
        ),
        sa.Column(
            "effective_date",
            sa.Date(),
            nullable=True,
            comment="The calendar date the value became valid.",
        ),
        sa.Column(
            "expiration_date",
            sa.Date(),
            nullable=True,
            comment="The calendar date the value is no longer valid.",
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("the_type"),
    )
    op.create_table(
        "organization_status",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "status",
            sa.String(length=25),
            nullable=True,
            comment="Enumerated value to describe the organization status.",
        ),
        sa.Column(
            "description",
            sa.String(length=1000),
            nullable=True,
            comment="Description of the organization status. This is the displayed name.",
        ),
        sa.Column(
            "create_date",
            sa.DateTime(),
            nullable=True,
            comment="Date and time (UTC) when the physical record was created in the database.",
        ),
        sa.Column(
            "update_date",
            sa.DateTime(),
            nullable=True,
            comment="Date and time (UTC) when the physical record was updated in the database. It will be the same as the create_date until the record is first updated after creation.",
        ),
        sa.Column(
            "create_user",
            sa.String(),
            nullable=True,
            comment="The user who created this record in the database.",
        ),
        sa.Column(
            "update_user",
            sa.String(),
            nullable=True,
            comment="The user who last updated this record in the database.",
        ),
        sa.Column(
            "effective_date",
            sa.DateTime(),
            nullable=True,
            comment="The date and time that the code became valid and could be used.",
        ),
        sa.Column(
            "expiry_date",
            sa.DateTime(),
            nullable=True,
            comment="The date and time after which the code is no longer valid and should not be used.",
        ),
        sa.Column(
            "expiration_date",
            sa.Date(),
            nullable=True,
            comment="The calendar date the value is no longer valid.",
        ),
        sa.Column(
            "display_order",
            sa.Integer(),
            nullable=True,
            comment="Relative rank in display sorting order",
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("status"),
        sa.UniqueConstraint("status"),
    )
    op.create_table(
        "organization_address",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("organization_id", sa.Integer(), nullable=True),
        sa.Column("address_line_1", sa.String(length=500), nullable=True),
        sa.Column("address_line_2", sa.String(length=100), nullable=True),
        sa.Column("city", sa.String(length=100), nullable=True),
        sa.Column("postal_code", sa.String(length=10), nullable=True),
        sa.Column("state", sa.String(length=50), nullable=True),
        sa.Column("country", sa.String(length=100), nullable=True),
        sa.Column("other", sa.String(length=100), nullable=True),
        sa.Column("attorney_city", sa.String(length=100), nullable=True),
        sa.Column("attorney_postal_code", sa.String(length=10), nullable=True),
        sa.Column("attorney_province", sa.String(length=50), nullable=True),
        sa.Column("attorney_country", sa.String(length=100), nullable=True),
        sa.Column("attorney_address_other", sa.String(length=100), nullable=True),
        sa.Column("attorney_street_address", sa.String(length=500), nullable=True),
        sa.Column("attorney_representativename", sa.String(length=500), nullable=True),
        sa.Column(
            "create_date",
            sa.DateTime(),
            nullable=True,
            comment="Date and time (UTC) when the physical record was created in the database.",
        ),
        sa.Column(
            "update_date",
            sa.DateTime(),
            nullable=True,
            comment="Date and time (UTC) when the physical record was updated in the database. It will be the same as the create_date until the record is first updated after creation.",
        ),
        sa.Column(
            "create_user",
            sa.String(),
            nullable=True,
            comment="The user who created this record in the database.",
        ),
        sa.Column(
            "update_user",
            sa.String(),
            nullable=True,
            comment="The user who last updated this record in the database.",
        ),
        sa.Column(
            "effective_date",
            sa.DateTime(),
            nullable=True,
            comment="The date and time that the code became valid and could be used.",
        ),
        sa.Column(
            "expiry_date",
            sa.DateTime(),
            nullable=True,
            comment="The date and time after which the code is no longer valid and should not be used.",
        ),
        sa.Column(
            "expiration_date",
            sa.Date(),
            nullable=True,
            comment="The calendar date the value is no longer valid.",
        ),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["organization.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        comment="Represents an organization's address.",
    )
    op.create_table(
        "organization_balance",
        sa.Column("organization_id", sa.Integer(), nullable=False),
        sa.Column(
            "validated_credits",
            sa.BigInteger(),
            nullable=True,
            comment="The actual balance of validated Low Carbon Fuel credits held by a fuel supplier between the effective_date and the expiration_date. If expiration_date is NULL then we assume that it is the current balance.",
        ),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "create_date",
            sa.DateTime(),
            nullable=True,
            comment="Date and time (UTC) when the physical record was created in the database.",
        ),
        sa.Column(
            "update_date",
            sa.DateTime(),
            nullable=True,
            comment="Date and time (UTC) when the physical record was updated in the database. It will be the same as the create_date until the record is first updated after creation.",
        ),
        sa.Column(
            "create_user",
            sa.String(),
            nullable=True,
            comment="The user who created this record in the database.",
        ),
        sa.Column(
            "update_user",
            sa.String(),
            nullable=True,
            comment="The user who last updated this record in the database.",
        ),
        sa.Column(
            "effective_date",
            sa.DateTime(),
            nullable=True,
            comment="The date and time that the code became valid and could be used.",
        ),
        sa.Column(
            "expiry_date",
            sa.DateTime(),
            nullable=True,
            comment="The date and time after which the code is no longer valid and should not be used.",
        ),
        sa.Column(
            "expiration_date",
            sa.Date(),
            nullable=True,
            comment="The calendar date the value is no longer valid.",
        ),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["organization.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        comment="Represents a fuel supplier organization's credit balance at a given point in time. The government organization does not have an actual credit balance, but rather one was set artificially high to enable the awarding or validating of credits to fuel suppliers within TFRS.",
    )
    op.add_column("organization", sa.Column("status_id", sa.Integer(), nullable=True))
    op.add_column(
        "organization", sa.Column("actions_type_id", sa.Integer(), nullable=True)
    )
    op.alter_column(
        "organization",
        "name",
        existing_type=sa.VARCHAR(),
        nullable=True,
        comment="Organization's legal name",
        existing_comment="Organization Name",
    )
    op.create_foreign_key(
        None, "organization", "organization_status", ["status_id"], ["id"]
    )
    op.create_foreign_key(
        None, "organization", "organization_actions_type", ["actions_type_id"], ["id"]
    )
    op.create_table_comment(
        "organization",
        "Contains a list of all of the recognized Part 3 fuel suppliers, both past and present, as well as an entry for the government which is also considered an organization.",
        existing_comment="Organizations",
        schema=None,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table_comment(
        "organization",
        "Organizations",
        existing_comment="Contains a list of all of the recognized Part 3 fuel suppliers, both past and present, as well as an entry for the government which is also considered an organization.",
        schema=None,
    )
    op.drop_constraint(None, "organization", type_="foreignkey")
    op.drop_constraint(None, "organization", type_="foreignkey")
    op.alter_column(
        "organization",
        "name",
        existing_type=sa.VARCHAR(),
        nullable=False,
        comment="Organization Name",
        existing_comment="Organization's legal name",
    )
    op.drop_column("organization", "actions_type_id")
    op.drop_column("organization", "status_id")
    op.drop_table("organization_balance")
    op.drop_table("organization_address")
    op.drop_table("organization_status")
    op.drop_table("organization_actions_type")
    op.drop_table("organization_type")
    # ### end Alembic commands ###
