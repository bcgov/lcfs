{
  "openapi": "3.1.0",
  "info": {
    "title": "LCFS Backend API Development",
    "version": "0.1.0"
  },
  "paths": {
    "/metrics": {
      "get": {
        "summary": "Metrics",
        "description": "Endpoint that serves Prometheus metrics.",
        "operationId": "metrics",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/health": {
      "get": {
        "tags": [
          "monitoring"
        ],
        "summary": "Health Check",
        "description": "Checks the health of a project.\n\nIt returns 200 if the project is healthy.",
        "operationId": "healthCheck",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/allocation-agreement/table-options": {
      "get": {
        "tags": [
          "allocation_agreements"
        ],
        "summary": "Get Table Options",
        "description": "Endpoint to retrieve table options related to allocation agreements",
        "operationId": "getTableOptions",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/allocation-agreement/list-all": {
      "post": {
        "tags": [
          "allocation_agreements"
        ],
        "summary": "Get Allocation Agreements",
        "description": "Endpoint to get list of allocation agreements for a compliance report",
        "operationId": "getAllocationAgreements",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComplianceReportRequestSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllocationAgreementAllSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/allocation-agreement/list": {
      "post": {
        "tags": [
          "allocation_agreements"
        ],
        "summary": "Get Allocation Agreements Paginated",
        "operationId": "getAllocationAgreementsPaginated",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaginatedAllocationAgreementRequestSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllocationAgreementListSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/allocation-agreement/save": {
      "post": {
        "tags": [
          "allocation_agreements"
        ],
        "summary": "Save Allocation Agreements Row",
        "description": "Endpoint to save a single allocation agreements row",
        "operationId": "saveAllocationAgreementsRow",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AllocationAgreementCreateSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/AllocationAgreementSchema"
                    },
                    {
                      "$ref": "#/components/schemas/DeleteAllocationAgreementResponseSchema"
                    }
                  ],
                  "title": "Response Saveallocationagreementsrow"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/allocation-agreement/search": {
      "get": {
        "tags": [
          "allocation_agreements"
        ],
        "summary": "Search Table Options Strings",
        "description": "Endpoint to search allocation agreement options based on a query string",
        "operationId": "searchTableOptionsStrings",
        "parameters": [
          {
            "name": "transactionPartner",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Trading partner (company) for filtering options",
              "title": "Transactionpartner"
            },
            "description": "Trading partner (company) for filtering options"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizationDetailsSchema"
                  },
                  "title": "Response Searchtableoptionsstrings"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/transactions/{organization_id}": {
      "post": {
        "tags": [
          "transactions"
        ],
        "summary": "Get Transactions Paginated By Org",
        "description": "Fetches a combined list of Issuances and Transfers for a specific organization, sorted by create_date, with pagination.",
        "operationId": "getTransactionsPaginatedByOrg",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Organization Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaginationRequestSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionListSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/transactions/{organization_id}/export": {
      "get": {
        "tags": [
          "transactions"
        ],
        "summary": "Export Transactions By Org",
        "description": "Endpoint to export information of all transactions for a specific organization",
        "operationId": "exportTransactionsByOrg",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Organization Id"
            }
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "File export format",
              "default": "xls",
              "title": "Format"
            },
            "description": "File export format"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/transactions/": {
      "post": {
        "tags": [
          "transactions"
        ],
        "summary": "Get Transactions Paginated",
        "description": "Fetches a combined list of Issuances and Transfers, sorted by create_date, with pagination.",
        "operationId": "getTransactionsPaginated",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaginationRequestSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionListSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/transactions/export": {
      "get": {
        "tags": [
          "transactions"
        ],
        "summary": "Export Transactions",
        "description": "Endpoint to export information of all transactions",
        "operationId": "exportTransactions",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "File export format",
              "default": "xls",
              "title": "Format"
            },
            "description": "File export format"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/transactions/statuses/": {
      "get": {
        "tags": [
          "transactions"
        ],
        "summary": "Get Transaction Statuses",
        "description": "Fetch all transaction statuses",
        "operationId": "getTransactionStatuses",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TransactionStatusSchema"
                  },
                  "type": "array",
                  "title": "Response Gettransactionstatuses"
                }
              }
            }
          }
        }
      }
    },
    "/api/transfers/": {
      "get": {
        "tags": [
          "transfers"
        ],
        "summary": "Get All Transfers",
        "description": "Endpoint to fetch all transfers.",
        "operationId": "getAllTransfers",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TransferSchema"
                  },
                  "type": "array",
                  "title": "Response Getalltransfers"
                }
              }
            }
          }
        }
      }
    },
    "/api/transfers/{transfer_id}": {
      "get": {
        "tags": [
          "transfers"
        ],
        "summary": "Get Transfer",
        "description": "Endpoint to fetch a transfer by its ID.",
        "operationId": "getTransfer",
        "parameters": [
          {
            "name": "transfer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Transfer Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "transfers"
        ],
        "summary": "Government Update Transfer",
        "description": "Endpoint to set an existing transfers status to 'Deleted'.",
        "operationId": "governmentUpdateTransfer",
        "parameters": [
          {
            "name": "transfer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Transfer Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransferCreateSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/transfers/{transfer_id}/category": {
      "put": {
        "tags": [
          "transfers"
        ],
        "summary": "Update Category",
        "operationId": "updateCategory",
        "parameters": [
          {
            "name": "transfer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Transfer Id"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "title": "Category"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/echo/": {
      "post": {
        "tags": [
          "echo"
        ],
        "summary": "Send Echo Message",
        "description": "Sends echo back to user.\n\n:param incoming_message: incoming message.\n:returns: message same as the incoming.",
        "operationId": "sendEchoMessage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Message"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/redis/": {
      "get": {
        "tags": [
          "redis"
        ],
        "summary": "Get Redis Value",
        "description": "Get value from redis.\n\n:param key: redis key, to get data from.\n:param redis_pool: redis connection pool.\n:returns: information from redis.",
        "operationId": "getRedisValue",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RedisValueDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "redis"
        ],
        "summary": "Set Redis Value",
        "description": "Set value in redis.\n\n:param redis_value: new value data.\n:param redis_pool: redis connection pool.",
        "operationId": "setRedisValue",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RedisValueDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/export": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Export Users",
        "description": "Endpoint to export information of all users\n\nThis endpoint can support exporting data in different file formats (xls, xlsx, csv)\nas specified by the 'format' and 'media_type' variables.\n- 'format' specifies the file format: options are 'xls', 'xlsx', and 'csv'.\n- 'media_type' sets the appropriate MIME type based on 'format':\n    'application/vnd.ms-excel' for 'xls',\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' for 'xlsx',\n    'text/csv' for 'csv'.\n\nThe SpreadsheetBuilder class is used for building the spreadsheet.\nIt allows adding multiple sheets with custom styling options and exports them as a byte stream.\nAlso, an example of how to use the SpreadsheetBuilder is provided in its class documentation.\n\nNote: Only the first sheet data is used for the CSV format,\n    as CSV files do not support multiple sheets.",
        "operationId": "exportUsers",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "File export format",
              "default": "xls",
              "title": "Format"
            },
            "description": "File export format"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/list": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Get Users",
        "description": "Endpoint to get information of all users for ag-grid in the UI\n\nPagination Request Schema:\n- page: offset/ page indicates the pagination of rows for the users list\n- size: size indicates the number of rows per page for the users list\n- sortOrders: sortOrders is an array of objects that specify the sorting criteria for the users list.\n    Each object has the following properties:\n    - field: the name of the field to sort by\n    - direction: the sorting direction ('asc' or 'desc')\n- filterModel: filterModel is an array of objects that specifies the filtering criteria for the users list.\n    It has the following properties:\n    - filter_type: the type of filtering to perform ('text', 'number', 'date', 'boolean')\n    - type: the type of filter to apply ('equals', 'notEquals', 'contains', 'notContains', 'startsWith', 'endsWith')\n    - filter: the actual filter value\n    - field: Database Field that needs filtering.",
        "operationId": "getUsers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaginationRequestSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/current": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get Current User",
        "description": "Endpoint to get information of the current user\n\nThis endpoint returns the information of the current user, including their roles and organization.",
        "operationId": "getCurrentUser",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserBaseSchema"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{user_id}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get User By Id",
        "description": "Endpoint to get information of a user by ID\nThis endpoint returns the information of a user by ID, including their roles and organization.",
        "operationId": "getUserById",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserBaseSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "users"
        ],
        "summary": "Update User",
        "description": "Endpoint to update a user\nThis endpoint updates a user and returns the information of the updated user.",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserBaseSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Delete User",
        "description": "Endpoint to delete a user\nThis endpoint deletes a user, if the user had never logged in before.",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/users": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Create User",
        "description": "Endpoint to create a new user\nThis endpoint creates a new user and returns the information of the created user.",
        "operationId": "createUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{user_id}/roles": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get User Roles",
        "description": "Endpoint to get the roles of a user",
        "operationId": "getUserRoles",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleSchema"
                  },
                  "title": "Response Getuserroles"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{user_id}/activity": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Get User Activities",
        "description": "Get activities of a specific user.\n\nPermissions:\n- Government users with 'ADMINISTRATOR' role can access any user's activities.\n- Supplier users with 'MANAGE_USERS' role can access activities of users within\n    their own organization.",
        "operationId": "getUserActivities",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaginationRequestSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserActivitiesResponseSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/activities/all": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Get All User Activities",
        "description": "Get activities of all users.",
        "operationId": "getAllUserActivities",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaginationRequestSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserActivitiesResponseSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/roles/": {
      "get": {
        "tags": [
          "roles"
        ],
        "summary": "Get Roles",
        "operationId": "getRoles",
        "parameters": [
          {
            "name": "government_roles_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Government Roles Only"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleSchema"
                  },
                  "title": "Response Getroles"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/dashboard/director-review-counts": {
      "get": {
        "tags": [
          "dashboard"
        ],
        "summary": "Get Director Review Counts",
        "description": "Endpoint to retrieve counts for director review items",
        "operationId": "getDirectorReviewCounts",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DirectorReviewCountsSchema"
                }
              }
            }
          }
        }
      }
    },
    "/api/dashboard/transaction-counts": {
      "get": {
        "tags": [
          "dashboard"
        ],
        "summary": "Get Transaction Counts",
        "description": "Endpoint to retrieve counts for transaction items",
        "operationId": "getTransactionCounts",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionCountsSchema"
                }
              }
            }
          }
        }
      }
    },
    "/api/dashboard/org-transaction-counts": {
      "get": {
        "tags": [
          "dashboard"
        ],
        "summary": "Get Org Transaction Counts",
        "description": "Endpoint to retrieve counts for organizarion transaction items",
        "operationId": "getOrgTransactionCounts",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizarionTransactionCountsSchema"
                }
              }
            }
          }
        }
      }
    },
    "/api/dashboard/org-compliance-report-counts": {
      "get": {
        "tags": [
          "dashboard"
        ],
        "summary": "Get Org Compliance Report Counts",
        "description": "Endpoint to retrieve counts for organization compliance report items",
        "operationId": "getOrgComplianceReportCounts",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrgComplianceReportCountsSchema"
                }
              }
            }
          }
        }
      }
    },
    "/api/notifications/": {
      "get": {
        "tags": [
          "notifications"
        ],
        "summary": "Get Notifications Channel Subscriptions",
        "operationId": "getNotificationsChannelSubscriptions",
        "parameters": [
          {
            "name": "user",
            "in": "query",
            "required": true,
            "schema": {
              "title": "User"
            }
          },
          {
            "name": "response_model",
            "in": "query",
            "required": false,
            "schema": {
              "title": "Response Model"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/notifications/{notification_id}": {
      "get": {
        "tags": [
          "notifications"
        ],
        "summary": "Get Notification",
        "operationId": "getNotification",
        "parameters": [
          {
            "name": "notification_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Notification Id"
            }
          },
          {
            "name": "user",
            "in": "query",
            "required": true,
            "schema": {
              "title": "User"
            }
          },
          {
            "name": "response_model",
            "in": "query",
            "required": false,
            "schema": {
              "title": "Response Model"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "notifications"
        ],
        "summary": "Update Notification",
        "operationId": "updateNotification",
        "parameters": [
          {
            "name": "notification_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Notification Id"
            }
          },
          {
            "name": "user",
            "in": "query",
            "required": true,
            "schema": {
              "title": "User"
            }
          },
          {
            "name": "response_model",
            "in": "query",
            "required": false,
            "schema": {
              "title": "Response Model"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationMessageRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/notifications/{notification_channel_subscription_id}": {
      "get": {
        "tags": [
          "notifications"
        ],
        "summary": "Get Notification Channel Subscription",
        "operationId": "getNotificationChannelSubscription",
        "parameters": [
          {
            "name": "notification_channel_subscription_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Notification Channel Subscription Id"
            }
          },
          {
            "name": "user",
            "in": "query",
            "required": true,
            "schema": {
              "title": "User"
            }
          },
          {
            "name": "response_model",
            "in": "query",
            "required": false,
            "schema": {
              "title": "Response Model"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "notifications"
        ],
        "summary": "Update Notification Channel Subscription",
        "operationId": "updateNotificationChannelSubscription",
        "parameters": [
          {
            "name": "notification_channel_subscription_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Notification Channel Subscription Id"
            }
          },
          {
            "name": "user",
            "in": "query",
            "required": true,
            "schema": {
              "title": "User"
            }
          },
          {
            "name": "response_model",
            "in": "query",
            "required": false,
            "schema": {
              "title": "Response Model"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationChannelSubscriptionRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "notifications"
        ],
        "summary": "Delete Notification Channel Subscription",
        "operationId": "deleteNotificationChannelSubscription",
        "parameters": [
          {
            "name": "notification_channel_subscription_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Notification Channel Subscription Id"
            }
          },
          {
            "name": "user",
            "in": "query",
            "required": true,
            "schema": {
              "title": "User"
            }
          },
          {
            "name": "response_model",
            "in": "query",
            "required": false,
            "schema": {
              "title": "Response Model"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/organizations/export": {
      "get": {
        "tags": [
          "organizations"
        ],
        "summary": "Export Organizations",
        "description": "Endpoint to export information of all organizations\n\nThis endpoint can support exporting data in different file formats (xls, xlsx, csv)\nas specified by the 'export_format' and 'media_type' variables.\n- 'export_format' specifies the file format: options are 'xls', 'xlsx', and 'csv'.\n- 'media_type' sets the appropriate MIME type based on 'export_format':\n    'application/vnd.ms-excel' for 'xls',\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' for 'xlsx',\n    'text/csv' for 'csv'.\n\nThe SpreadsheetBuilder class is used for building the spreadsheet.\nIt allows adding multiple sheets with custom styling options and exports them as a byte stream.\nAlso, an example of how to use the SpreadsheetBuilder is provided in its class documentation.\n\nNote: Only the first sheet data is used for the CSV format,\n    as CSV files do not support multiple sheets.",
        "operationId": "exportOrganizations",
        "responses": {
          "200": {
            "description": "Successful Response"
          }
        }
      }
    },
    "/api/organizations/create": {
      "post": {
        "tags": [
          "organizations"
        ],
        "summary": "Create Organization",
        "description": "Endpoint to create a new organization. This includes processing the provided\norganization details along with associated addresses.",
        "operationId": "createOrganization",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationCreateSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationResponseSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/organizations/search": {
      "get": {
        "tags": [
          "organizations"
        ],
        "summary": "Search Organizations",
        "description": "Search for organizations based on a query string.\nReturns a list of organizations with their names and formatted addresses.",
        "operationId": "searchOrganizations",
        "parameters": [
          {
            "name": "org_name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 3,
              "description": "Company name or operating name",
              "title": "Org Name"
            },
            "description": "Company name or operating name"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizationDetailsSchema"
                  },
                  "title": "Response Searchorganizations"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/organizations/{organization_id}": {
      "get": {
        "tags": [
          "organizations"
        ],
        "summary": "Get Organization",
        "description": "Fetch a single organization by id",
        "operationId": "getOrganization",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Organization Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationResponseSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "organizations"
        ],
        "summary": "Update Organization",
        "description": "Update an organizations data by id",
        "operationId": "updateOrganization",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Organization Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationUpdateSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/organizations/": {
      "post": {
        "tags": [
          "organizations"
        ],
        "summary": "Get Organizations",
        "description": "Fetch a list of organizations",
        "operationId": "getOrganizations",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaginationRequestSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationListSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/organizations/statuses/": {
      "get": {
        "tags": [
          "organizations"
        ],
        "summary": "Get Organization Statuses",
        "description": "Fetch all organization statuses",
        "operationId": "getOrganizationStatuses",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/OrganizationStatusSchema"
                  },
                  "type": "array",
                  "title": "Response Getorganizationstatuses"
                }
              }
            }
          }
        }
      }
    },
    "/api/organizations/types/": {
      "get": {
        "tags": [
          "organizations"
        ],
        "summary": "Get Organization Types",
        "description": "Fetch all organization types",
        "operationId": "getOrganizationTypes",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/OrganizationTypeSchema"
                  },
                  "type": "array",
                  "title": "Response Getorganizationtypes"
                }
              }
            }
          }
        }
      }
    },
    "/api/organizations/names/": {
      "get": {
        "tags": [
          "organizations"
        ],
        "summary": "Get Organization Names",
        "description": "Fetch all organization names",
        "operationId": "getOrganizationNames",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/OrganizationSummaryResponseSchema-Output"
                  },
                  "type": "array",
                  "title": "Response Getorganizationnames"
                }
              }
            }
          }
        }
      }
    },
    "/api/organizations/registered/external": {
      "get": {
        "tags": [
          "organizations"
        ],
        "summary": "Get Externally Registered Organizations",
        "description": "Retrieve a list of registered organizations, excluding the specified organization.\n\nArgs:\n    org_id (int): The ID of the organization to be excluded from the list.\n\nReturns:\n    List[OrganizationSummaryResponseSchema]: A list of OrganizationSummaryResponseSchema objects\n        representing registered organizations, excluding the specified organization.\n\nRaises:\n    Exception: If an error occurs during the database query.",
        "operationId": "getExternallyRegisteredOrganizations",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/OrganizationSummaryResponseSchema-Output"
                  },
                  "type": "array",
                  "title": "Response Getexternallyregisteredorganizations"
                }
              }
            }
          }
        }
      }
    },
    "/api/organizations/balances/{organization_id}": {
      "get": {
        "tags": [
          "organizations"
        ],
        "summary": "Get Balances",
        "description": "Retrieve the total and reserved balances for a specific organization identified by its ID.",
        "operationId": "getBalances",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Organization Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationBalanceResponseSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/organizations/current/balances": {
      "get": {
        "tags": [
          "organizations"
        ],
        "summary": "Get Balances",
        "description": "Retrieve the total and reserved balances for a specific organization identified by its ID.",
        "operationId": "getBalances",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationBalanceResponseSchema"
                }
              }
            }
          }
        }
      }
    },
    "/api/organization/{organization_id}/users/list": {
      "post": {
        "tags": [
          "organization"
        ],
        "summary": "Get Org Users",
        "description": "Enpoint to get information of all users related to organization for ag-grid in the UI\n\nPagination Request Schema:\n- page: offset/ page indicates the pagination of rows for the users list\n- size: size indicates the number of rows per page for the users list\n- sortOrders: sortOrders is an array of objects that specify the sorting criteria for the users list.\n    Each object has the following properties:\n    - field: the name of the field to sort by\n    - direction: the sorting direction ('asc' or 'desc')\n- filterModel: filterModel is an array of objects that specifies the filtering criteria for the users list.\n    It has the following properties:\n    - filter_type: the type of filtering to perform ('text', 'number', 'date', 'boolean')\n    - type: the type of filter to apply ('equals', 'notEquals', 'contains', 'notContains', 'startsWith', 'endsWith')\n    - filter: the actual filter value\n    - field: Database Field that needs filtering.",
        "operationId": "getOrgUsers",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Organization Id"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Active or Inactive users list",
              "default": "Active",
              "title": "Status"
            },
            "description": "Active or Inactive users list"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaginationRequestSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/organization/{organization_id}/users/{user_id}": {
      "get": {
        "tags": [
          "organization"
        ],
        "summary": "Get User By Id",
        "description": "Endpoint to get information of a user by ID\nThis endpoint returns the information of a user by ID, including their roles and organization.",
        "operationId": "getUserById",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Organization Id"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserBaseSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "organization"
        ],
        "summary": "Update User",
        "description": "Endpoint to update a user\nThis endpoint updates a user and returns the information of the updated user.",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Organization Id"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserBaseSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/organization/{organization_id}/users": {
      "post": {
        "tags": [
          "organization"
        ],
        "summary": "Create User",
        "description": "Endpoint to create a new user\nThis endpoint creates a new user and returns the information of the created user.",
        "operationId": "createUser",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Organization Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateSchema"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/organization/transactions": {
      "post": {
        "tags": [
          "organization"
        ],
        "summary": "Get Transactions Paginated For Org",
        "description": "Fetches a combined list of Issuances and Transfers, sorted by create_date, with pagination.",
        "operationId": "getTransactionsPaginatedForOrg",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaginationRequestSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionListSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/organization/transactions/export": {
      "get": {
        "tags": [
          "organization"
        ],
        "summary": "Export Transactions For Org",
        "description": "Endpoint to export information of all transactions for a specific organization",
        "operationId": "exportTransactionsForOrg",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "File export format",
              "default": "xls",
              "title": "Format"
            },
            "description": "File export format"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/organization/{organization_id}/transfers": {
      "post": {
        "tags": [
          "organization"
        ],
        "summary": "Create Transfer",
        "description": "Endpoint to create a new transfer\nThis endpoint creates a new transfer and returns the information of the created transfer.",
        "operationId": "createTransfer",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Organization Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransferCreateSchema"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/organization/{organization_id}/transfers/{transfer_id}": {
      "put": {
        "tags": [
          "organization"
        ],
        "summary": "Update Transfer",
        "description": "Endpoint to create a new transfer\nThis endpoint creates a new transfer and returns the information of the created transfer.",
        "operationId": "updateTransfer",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Organization Id"
            }
          },
          {
            "name": "transfer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Transfer Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransferCreateSchema"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/organization/{organization_id}/reports": {
      "post": {
        "tags": [
          "organization"
        ],
        "summary": "Create Compliance Report",
        "operationId": "createComplianceReport",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Organization Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComplianceReportCreateSchema"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComplianceReportBaseSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/organization/{organization_id}/reports/list": {
      "post": {
        "tags": [
          "organization"
        ],
        "summary": "Get Compliance Reports",
        "operationId": "getComplianceReports",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Organization Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaginationRequestSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComplianceReportListSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/organization/{organization_id}/reports/reported-years": {
      "get": {
        "tags": [
          "organization"
        ],
        "summary": "Get All Org Reported Years",
        "description": "Gets all compliance report years that an organization has reported",
        "operationId": "getAllOrgReportedYears",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Organization Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompliancePeriodSchema"
                  },
                  "title": "Response Getallorgreportedyears"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/organization/{organization_id}/reports/{report_id}": {
      "get": {
        "tags": [
          "organization"
        ],
        "summary": "Get Compliance Report By Id",
        "description": "Endpoint to get information of a user by ID\nThis endpoint returns the information of a user by ID, including their roles and organization.",
        "operationId": "getComplianceReportById",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Organization Id"
            }
          },
          {
            "name": "report_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Report Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComplianceReportBaseSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal_comments/": {
      "post": {
        "tags": [
          "internal_comments"
        ],
        "summary": "Create Comment",
        "description": "API endpoint to create a new internal comment. Requires the user to have the 'Government' role.\n\nArgs:\n    request (Request): The request object.\n    comment_data (InternalCommentCreateSchema): The schema containing the data for the new comment.\n    service (InternalCommentService, optional): The service handling the internal comment logic.\n\nReturns:\n    InternalCommentResponseSchema: The created internal comment.",
        "operationId": "createComment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InternalCommentCreateSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalCommentResponseSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal_comments/{entity_type}/{entity_id}": {
      "get": {
        "tags": [
          "internal_comments"
        ],
        "summary": "Get Comments",
        "description": "Retrieves all internal comments associated with a specified entity type and ID. Requires 'Government' role.\n\nArgs:\n    request (Request): The request object.\n    entity_type (str): The type of the entity.\n    entity_id (int): The ID of the entity.\n    service (InternalCommentService, optional): The service handling the internal comment logic.\n\nReturns:\n    List[InternalCommentResponseSchema]: A list of internal comments associated with the entity.",
        "operationId": "getComments",
        "parameters": [
          {
            "name": "entity_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Entity Type"
            }
          },
          {
            "name": "entity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Entity Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InternalCommentResponseSchema"
                  },
                  "title": "Response Getcomments"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/internal_comments/{internal_comment_id}": {
      "put": {
        "tags": [
          "internal_comments"
        ],
        "summary": "Update Comment",
        "description": "Updates the text of an existing internal comment. Requires the user to have the 'Government' role.\n\nArgs:\n    request (Request): The request object.\n    internal_comment_id (int): The ID of the internal comment to be updated.\n    comment_data (InternalCommentUpdateSchema): The schema with the new comment text.\n    service (InternalCommentService, optional): The service handling the internal comment logic.\n\nReturns:\n    InternalCommentResponseSchema: The updated internal comment.",
        "operationId": "updateComment",
        "parameters": [
          {
            "name": "internal_comment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Internal Comment Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InternalCommentUpdateSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalCommentResponseSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/fuel-codes/table-options": {
      "get": {
        "tags": [
          "fuel_codes"
        ],
        "summary": "Get Table Options",
        "description": "Endpoint to retrieve table options related to fuel codes",
        "operationId": "getTableOptions",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableOptionsSchema"
                }
              }
            }
          }
        }
      }
    },
    "/api/fuel-codes/search": {
      "get": {
        "tags": [
          "fuel_codes"
        ],
        "summary": "Search Table Options Strings",
        "description": "Endpoint to search fuel codes based on a query string",
        "operationId": "searchTableOptionsStrings",
        "parameters": [
          {
            "name": "company",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Company for filtering options",
              "title": "Company"
            },
            "description": "Company for filtering options"
          },
          {
            "name": "contactName",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Contact name for filtering options",
              "title": "Contactname"
            },
            "description": "Contact name for filtering options"
          },
          {
            "name": "contactEmail",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Contact email for filtering options",
              "title": "Contactemail"
            },
            "description": "Contact email for filtering options"
          },
          {
            "name": "fuelCode",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Fuel code for filtering options",
              "title": "Fuelcode"
            },
            "description": "Fuel code for filtering options"
          },
          {
            "name": "prefix",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Prefix for filtering options",
              "title": "Prefix"
            },
            "description": "Prefix for filtering options"
          },
          {
            "name": "distinctSearch",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Based on flag retrieve entire row data or just the list of distinct values",
              "default": false,
              "title": "Distinctsearch"
            },
            "description": "Based on flag retrieve entire row data or just the list of distinct values"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/SearchFuelCodeList"
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  ],
                  "title": "Response Searchtableoptionsstrings"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/fuel-codes/list": {
      "post": {
        "tags": [
          "fuel_codes"
        ],
        "summary": "Get Fuel Codes",
        "description": "Endpoint to get list of fuel codes with pagination options",
        "operationId": "getFuelCodes",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaginationRequestSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FuelCodesSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/fuel-codes/{fuel_code_id}": {
      "get": {
        "tags": [
          "fuel_codes"
        ],
        "summary": "Get Fuel Code",
        "operationId": "getFuelCode",
        "parameters": [
          {
            "name": "fuel_code_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Fuel Code Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/lcfs__web__api__fuel_code__schema__FuelCodeSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "fuel_codes"
        ],
        "summary": "Update Fuel Code",
        "operationId": "updateFuelCode",
        "parameters": [
          {
            "name": "fuel_code_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Fuel Code Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FuelCodeCreateSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "fuel_codes"
        ],
        "summary": "Delete Fuel Code",
        "operationId": "deleteFuelCode",
        "parameters": [
          {
            "name": "fuel_code_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Fuel Code Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/fuel-codes/save": {
      "post": {
        "tags": [
          "fuel_codes"
        ],
        "summary": "Save Fuel Code Row",
        "description": "Endpoint to save a single fuel code row",
        "operationId": "saveFuelCodeRow",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FuelCodeCreateSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/lcfs__web__api__fuel_code__schema__FuelCodeSchema"
                    },
                    {
                      "$ref": "#/components/schemas/DeleteFuelCodeResponseSchema"
                    }
                  ],
                  "title": "Response Savefuelcoderow"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/fuel-exports/table-options": {
      "get": {
        "tags": [
          "fuel_exports"
        ],
        "summary": "Get Fuel Export Table Options",
        "operationId": "getFuelExportTableOptions",
        "parameters": [
          {
            "name": "compliancePeriod",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Complianceperiod"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/lcfs__web__api__fuel_export__schema__FuelTypeOptionsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/fuel-exports/list-all": {
      "post": {
        "tags": [
          "fuel_exports"
        ],
        "summary": "Get Fuel Exports",
        "description": "Endpoint to get list of fuel supplied list for a compliance report",
        "operationId": "getFuelExports",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommonPaginatedReportRequestSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FuelExportsSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/fuel-exports/save": {
      "post": {
        "tags": [
          "fuel_exports"
        ],
        "summary": "Save Fuel Export Row",
        "description": "Endpoint to save single fuel export row",
        "operationId": "saveFuelExportRow",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FuelExportCreateSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/FuelExportSchema"
                    },
                    {
                      "$ref": "#/components/schemas/DeleteFuelExportResponseSchema"
                    }
                  ],
                  "title": "Response Savefuelexportrow"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin-adjustments/{admin_adjustment_id}": {
      "get": {
        "tags": [
          "admin_adjustments"
        ],
        "summary": "Get Admin Adjustment",
        "description": "Endpoint to fetch an admin adjustment by its ID.",
        "operationId": "getAdminAdjustment",
        "parameters": [
          {
            "name": "admin_adjustment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Admin Adjustment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminAdjustmentSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin-adjustments/": {
      "put": {
        "tags": [
          "admin_adjustments"
        ],
        "summary": "Update Admin Adjustment",
        "description": "Endpoint to update an existing admin adjustment.",
        "operationId": "updateAdminAdjustment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminAdjustmentUpdateSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminAdjustmentSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "admin_adjustments"
        ],
        "summary": "Create Admin Adjustment",
        "description": "Endpoint to create a new admin adjustment.",
        "operationId": "createAdminAdjustment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminAdjustmentCreateSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminAdjustmentSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/initiative-agreements/{initiative_agreement_id}": {
      "get": {
        "tags": [
          "initiative_agreements"
        ],
        "summary": "Get Initiative Agreement",
        "description": "Endpoint to fetch an initiative agreement by its ID.",
        "operationId": "getInitiativeAgreement",
        "parameters": [
          {
            "name": "initiative_agreement_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Initiative Agreement Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InitiativeAgreementSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/initiative-agreements/": {
      "put": {
        "tags": [
          "initiative_agreements"
        ],
        "summary": "Update Initiative Agreement",
        "description": "Endpoint to update an existing initiative agreement.",
        "operationId": "updateInitiativeAgreement",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InitiativeAgreementUpdateSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InitiativeAgreementSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "initiative_agreements"
        ],
        "summary": "Create Initiative Agreement",
        "description": "Endpoint to create a new initiative agreement.",
        "operationId": "createInitiativeAgreement",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InitiativeAgreementCreateSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InitiativeAgreementSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/reports/compliance-periods": {
      "get": {
        "tags": [
          "compliance_reports"
        ],
        "summary": "Get Compliance Periods",
        "description": "Get a list of compliance periods",
        "operationId": "getCompliancePeriods",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CompliancePeriodSchema"
                  },
                  "type": "array",
                  "title": "Response Getcomplianceperiods"
                }
              }
            }
          }
        }
      }
    },
    "/api/reports/list": {
      "post": {
        "tags": [
          "compliance_reports"
        ],
        "summary": "Get Compliance Reports",
        "operationId": "getComplianceReports",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaginationRequestSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComplianceReportListSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/reports/{report_id}": {
      "get": {
        "tags": [
          "compliance_reports"
        ],
        "summary": "Get Compliance Report By Id",
        "operationId": "getComplianceReportById",
        "parameters": [
          {
            "name": "report_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Report Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComplianceReportBaseSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "compliance_reports"
        ],
        "summary": "Update Compliance Report",
        "description": "Update an existing compliance report.",
        "operationId": "updateComplianceReport",
        "parameters": [
          {
            "name": "report_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Report Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComplianceReportUpdateSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComplianceReportBaseSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/reports/{report_id}/summary": {
      "get": {
        "tags": [
          "compliance_reports"
        ],
        "summary": "Get Compliance Report Summary",
        "description": "Retrieve the comprehensive compliance report summary for a specific report by ID.",
        "operationId": "getComplianceReportSummary",
        "parameters": [
          {
            "name": "report_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Report Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComplianceReportSummarySchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "compliance_reports"
        ],
        "summary": "Update Compliance Report Summary",
        "description": "Autosave compliance report summary details for a specific summary by ID.",
        "operationId": "updateComplianceReportSummary",
        "parameters": [
          {
            "name": "report_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Report Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComplianceReportSummarySchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComplianceReportSummarySchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/notional-transfers/table-options": {
      "get": {
        "tags": [
          "notional_transfers"
        ],
        "summary": "Get Table Options",
        "description": "Endpoint to retrieve table options related to notional transfers",
        "operationId": "getTableOptions",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotionalTransferTableOptionsSchema"
                }
              }
            }
          }
        }
      }
    },
    "/api/notional-transfers/list-all": {
      "post": {
        "tags": [
          "notional_transfers"
        ],
        "summary": "Get Notional Transfers",
        "description": "Endpoint to get list of notional transfers for a compliance report",
        "operationId": "getNotionalTransfers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComplianceReportRequestSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotionalTransfersAllSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/notional-transfers/list": {
      "post": {
        "tags": [
          "notional_transfers"
        ],
        "summary": "Get Notional Transfers Paginated",
        "operationId": "getNotionalTransfersPaginated",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaginatedNotionalTransferRequestSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotionalTransfersSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/notional-transfers/{notional_transfer_id}": {
      "get": {
        "tags": [
          "notional_transfers"
        ],
        "summary": "Get Notional Transfer",
        "operationId": "getNotionalTransfer",
        "parameters": [
          {
            "name": "notional_transfer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Notional Transfer Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotionalTransferSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/notional-transfers/save": {
      "post": {
        "tags": [
          "notional_transfers"
        ],
        "summary": "Save Notional Transfer Row",
        "description": "Endpoint to save a single notional transfer row",
        "operationId": "saveNotionalTransferRow",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotionalTransferCreateSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/NotionalTransferSchema"
                    },
                    {
                      "$ref": "#/components/schemas/DeleteNotionalTransferResponseSchema"
                    }
                  ],
                  "title": "Response Savenotionaltransferrow"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/other-uses/table-options": {
      "get": {
        "tags": [
          "other_uses"
        ],
        "summary": "Get Table Options",
        "description": "Endpoint to retrieve table options related to other uses",
        "operationId": "getTableOptions",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OtherUsesTableOptionsSchema"
                }
              }
            }
          }
        }
      }
    },
    "/api/other-uses/list-all": {
      "post": {
        "tags": [
          "other_uses"
        ],
        "summary": "Get Other Uses",
        "description": "Endpoint to get list of other uses for a compliance report",
        "operationId": "getOtherUses",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComplianceReportRequestSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OtherUsesAllSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/other-uses/list": {
      "post": {
        "tags": [
          "other_uses"
        ],
        "summary": "Get Other Uses Paginated",
        "operationId": "getOtherUsesPaginated",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaginatedOtherUsesRequestSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OtherUsesListSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/other-uses/save": {
      "post": {
        "tags": [
          "other_uses"
        ],
        "summary": "Save Other Uses Row",
        "description": "Endpoint to save a single other uses row",
        "operationId": "saveOtherUsesRow",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OtherUsesCreateSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/OtherUsesSchema"
                    },
                    {
                      "$ref": "#/components/schemas/DeleteOtherUsesResponseSchema"
                    }
                  ],
                  "title": "Response Saveotherusesrow"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/final-supply-equipments/table-options": {
      "get": {
        "tags": [
          "final_supply_equipments"
        ],
        "summary": "Get Fse Options",
        "operationId": "getFseOptions",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FSEOptionsSchema"
                }
              }
            }
          }
        }
      }
    },
    "/api/final-supply-equipments/list-all": {
      "post": {
        "tags": [
          "final_supply_equipments"
        ],
        "summary": "Get Final Supply Equipments",
        "description": "Endpoint to get list of final supply equipments for a compliance report",
        "operationId": "getFinalSupplyEquipments",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommonPaginatedReportRequestSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinalSupplyEquipmentsSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/final-supply-equipments/save": {
      "post": {
        "tags": [
          "final_supply_equipments"
        ],
        "summary": "Save Final Supply Equipment Row",
        "description": "Endpoint to save single final supply equipment row",
        "operationId": "saveFinalSupplyEquipmentRow",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinalSupplyEquipmentCreateSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/FinalSupplyEquipmentSchema"
                    },
                    {
                      "$ref": "#/components/schemas/DeleteFinalSupplyEquipmentResponseSchema"
                    }
                  ],
                  "title": "Response Savefinalsupplyequipmentrow"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/final-supply-equipments/search": {
      "get": {
        "tags": [
          "final_supply_equipments"
        ],
        "summary": "Search Table Options",
        "description": "Endpoint to search table options strings",
        "operationId": "searchTableOptions",
        "parameters": [
          {
            "name": "manufacturer",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Manfacturer for filtering options",
              "title": "Manufacturer"
            },
            "description": "Manfacturer for filtering options"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "title": "Response Searchtableoptions"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/fuel-supply/table-options": {
      "get": {
        "tags": [
          "fuel_supplies"
        ],
        "summary": "Get Fs Table Options",
        "operationId": "getFsTableOptions",
        "parameters": [
          {
            "name": "compliancePeriod",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Complianceperiod"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/lcfs__web__api__fuel_supply__schema__FuelTypeOptionsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/fuel-supply/list-all": {
      "post": {
        "tags": [
          "fuel_supplies"
        ],
        "summary": "Get Fuel Supply",
        "description": "Endpoint to get list of fuel supplied list for a compliance report",
        "operationId": "getFuelSupply",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommonPaginatedReportRequestSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FuelSuppliesSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/fuel-supply/save": {
      "post": {
        "tags": [
          "fuel_supplies"
        ],
        "summary": "Save Fuel Supply Row",
        "description": "Endpoint to save single fuel supply row",
        "operationId": "saveFuelSupplyRow",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FuelSupplyCreateUpdateSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/FuelSupplyResponseSchema"
                    },
                    {
                      "$ref": "#/components/schemas/DeleteFuelSupplyResponseSchema"
                    }
                  ],
                  "title": "Response Savefuelsupplyrow"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/{parent_type}/{parent_id}": {
      "get": {
        "tags": [
          "documents"
        ],
        "summary": "Get All Documents",
        "operationId": "getAllDocuments",
        "parameters": [
          {
            "name": "parent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Parent Id"
            }
          },
          {
            "name": "parent_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Parent Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FileResponseSchema"
                  },
                  "title": "Response Getalldocuments"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "documents"
        ],
        "summary": "Upload File",
        "operationId": "uploadFile",
        "parameters": [
          {
            "name": "parent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Parent Id"
            }
          },
          {
            "name": "parent_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Parent Type"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_uploadFile"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileResponseSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/{parent_type}/{parent_id}/{document_id}": {
      "get": {
        "tags": [
          "documents"
        ],
        "summary": "Stream Document",
        "operationId": "streamDocument",
        "parameters": [
          {
            "name": "parent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Parent Id"
            }
          },
          {
            "name": "parent_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Parent Type"
            }
          },
          {
            "name": "document_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Document Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "documents"
        ],
        "summary": "Delete File",
        "operationId": "deleteFile",
        "parameters": [
          {
            "name": "parent_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Parent Type"
            }
          },
          {
            "name": "parent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Parent Id"
            }
          },
          {
            "name": "document_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Document Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AdminAdjustmentCreateSchema": {
        "properties": {
          "complianceUnits": {
            "type": "integer",
            "title": "Complianceunits"
          },
          "currentStatus": {
            "type": "string",
            "title": "Currentstatus"
          },
          "transactionEffectiveDate": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Transactioneffectivedate"
          },
          "toOrganizationId": {
            "type": "integer",
            "title": "Toorganizationid"
          },
          "govComment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Govcomment"
          },
          "internalComment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Internalcomment"
          }
        },
        "type": "object",
        "required": [
          "complianceUnits",
          "currentStatus",
          "toOrganizationId"
        ],
        "title": "AdminAdjustmentCreateSchema"
      },
      "AdminAdjustmentHistorySchema": {
        "properties": {
          "createDate": {
            "type": "string",
            "format": "date-time",
            "title": "Createdate"
          },
          "adminAdjustmentStatus": {
            "$ref": "#/components/schemas/AdminAdjustmentStatusSchema"
          },
          "userProfile": {
            "$ref": "#/components/schemas/HistoryUserSchema"
          }
        },
        "type": "object",
        "required": [
          "createDate",
          "adminAdjustmentStatus",
          "userProfile"
        ],
        "title": "AdminAdjustmentHistorySchema"
      },
      "AdminAdjustmentSchema": {
        "properties": {
          "complianceUnits": {
            "type": "integer",
            "title": "Complianceunits"
          },
          "currentStatus": {
            "$ref": "#/components/schemas/AdminAdjustmentStatusSchema"
          },
          "transactionEffectiveDate": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Transactioneffectivedate"
          },
          "toOrganizationId": {
            "type": "integer",
            "title": "Toorganizationid"
          },
          "govComment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Govcomment"
          },
          "internalComment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Internalcomment"
          },
          "adminAdjustmentId": {
            "type": "integer",
            "title": "Adminadjustmentid"
          },
          "toOrganization": {
            "$ref": "#/components/schemas/lcfs__web__api__admin_adjustment__schema__OrganizationSchema"
          },
          "history": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/AdminAdjustmentHistorySchema"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "History"
          },
          "returned": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Returned",
            "default": false
          },
          "createDate": {
            "type": "string",
            "format": "date-time",
            "title": "Createdate"
          }
        },
        "type": "object",
        "required": [
          "complianceUnits",
          "currentStatus",
          "toOrganizationId",
          "adminAdjustmentId",
          "toOrganization",
          "history",
          "createDate"
        ],
        "title": "AdminAdjustmentSchema"
      },
      "AdminAdjustmentStatusSchema": {
        "properties": {
          "adminAdjustmentStatusId": {
            "type": "integer",
            "title": "Adminadjustmentstatusid"
          },
          "status": {
            "type": "string",
            "title": "Status"
          }
        },
        "type": "object",
        "required": [
          "adminAdjustmentStatusId",
          "status"
        ],
        "title": "AdminAdjustmentStatusSchema"
      },
      "AdminAdjustmentUpdateSchema": {
        "properties": {
          "complianceUnits": {
            "type": "integer",
            "title": "Complianceunits"
          },
          "currentStatus": {
            "type": "string",
            "title": "Currentstatus"
          },
          "transactionEffectiveDate": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Transactioneffectivedate"
          },
          "toOrganizationId": {
            "type": "integer",
            "title": "Toorganizationid"
          },
          "govComment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Govcomment"
          },
          "internalComment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Internalcomment"
          },
          "adminAdjustmentId": {
            "type": "integer",
            "title": "Adminadjustmentid"
          }
        },
        "type": "object",
        "required": [
          "complianceUnits",
          "currentStatus",
          "toOrganizationId",
          "adminAdjustmentId"
        ],
        "title": "AdminAdjustmentUpdateSchema"
      },
      "AllocationAgreementAllSchema": {
        "properties": {
          "allocationAgreements": {
            "items": {
              "$ref": "#/components/schemas/AllocationAgreementSchema"
            },
            "type": "array",
            "title": "Allocationagreements"
          },
          "pagination": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PaginationResponseSchema"
              },
              {
                "type": "null"
              }
            ],
            "default": {}
          }
        },
        "type": "object",
        "required": [
          "allocationAgreements"
        ],
        "title": "AllocationAgreementAllSchema"
      },
      "AllocationAgreementCreateSchema": {
        "properties": {
          "complianceReportId": {
            "type": "integer",
            "title": "Compliancereportid"
          },
          "allocationAgreementId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Allocationagreementid"
          },
          "transactionPartner": {
            "type": "string",
            "title": "Transactionpartner"
          },
          "postalAddress": {
            "type": "string",
            "title": "Postaladdress"
          },
          "transactionPartnerEmail": {
            "type": "string",
            "title": "Transactionpartneremail"
          },
          "transactionPartnerPhone": {
            "type": "string",
            "title": "Transactionpartnerphone"
          },
          "fuelType": {
            "type": "string",
            "title": "Fueltype"
          },
          "ciOfFuel": {
            "type": "number",
            "title": "Cioffuel"
          },
          "quantity": {
            "type": "integer",
            "title": "Quantity"
          },
          "units": {
            "type": "string",
            "title": "Units"
          },
          "allocationTransactionType": {
            "type": "string",
            "title": "Allocationtransactiontype"
          },
          "fuelCategory": {
            "type": "string",
            "title": "Fuelcategory"
          },
          "provisionOfTheAct": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provisionoftheact"
          },
          "fuelCode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fuelcode"
          },
          "deleted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted"
          }
        },
        "type": "object",
        "required": [
          "complianceReportId",
          "transactionPartner",
          "postalAddress",
          "transactionPartnerEmail",
          "transactionPartnerPhone",
          "fuelType",
          "ciOfFuel",
          "quantity",
          "units",
          "allocationTransactionType",
          "fuelCategory"
        ],
        "title": "AllocationAgreementCreateSchema"
      },
      "AllocationAgreementListSchema": {
        "properties": {
          "allocationAgreements": {
            "items": {
              "$ref": "#/components/schemas/AllocationAgreementSchema"
            },
            "type": "array",
            "title": "Allocationagreements"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationResponseSchema"
          }
        },
        "type": "object",
        "required": [
          "allocationAgreements",
          "pagination"
        ],
        "title": "AllocationAgreementListSchema"
      },
      "AllocationAgreementSchema": {
        "properties": {
          "complianceReportId": {
            "type": "integer",
            "title": "Compliancereportid"
          },
          "allocationAgreementId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Allocationagreementid"
          },
          "transactionPartner": {
            "type": "string",
            "title": "Transactionpartner"
          },
          "postalAddress": {
            "type": "string",
            "title": "Postaladdress"
          },
          "transactionPartnerEmail": {
            "type": "string",
            "title": "Transactionpartneremail"
          },
          "transactionPartnerPhone": {
            "type": "string",
            "title": "Transactionpartnerphone"
          },
          "fuelType": {
            "type": "string",
            "title": "Fueltype"
          },
          "ciOfFuel": {
            "type": "number",
            "title": "Cioffuel"
          },
          "quantity": {
            "type": "integer",
            "title": "Quantity"
          },
          "units": {
            "type": "string",
            "title": "Units"
          },
          "allocationTransactionType": {
            "type": "string",
            "title": "Allocationtransactiontype"
          },
          "fuelCategory": {
            "type": "string",
            "title": "Fuelcategory"
          },
          "provisionOfTheAct": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provisionoftheact"
          },
          "fuelCode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fuelcode"
          },
          "deleted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted"
          }
        },
        "type": "object",
        "required": [
          "complianceReportId",
          "transactionPartner",
          "postalAddress",
          "transactionPartnerEmail",
          "transactionPartnerPhone",
          "fuelType",
          "ciOfFuel",
          "quantity",
          "units",
          "allocationTransactionType",
          "fuelCategory"
        ],
        "title": "AllocationAgreementSchema"
      },
      "AudienceScopeEnum": {
        "type": "string",
        "enum": [
          "Compliance Manager",
          "Director",
          "Analyst"
        ],
        "title": "AudienceScopeEnum"
      },
      "Body_uploadFile": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_uploadFile"
      },
      "CommonPaginatedReportRequestSchema": {
        "properties": {
          "complianceReportId": {
            "type": "integer",
            "title": "Compliancereportid"
          },
          "filters": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/FilterModel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filters"
          },
          "page": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Page"
          },
          "size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Size"
          },
          "sortOrders": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/SortOrder"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sortorders"
          }
        },
        "type": "object",
        "required": [
          "complianceReportId"
        ],
        "title": "CommonPaginatedReportRequestSchema"
      },
      "CompliancePeriodSchema": {
        "properties": {
          "compliancePeriodId": {
            "type": "integer",
            "title": "Complianceperiodid"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "effectiveDate": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Effectivedate"
          },
          "expirationDate": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expirationdate"
          },
          "displayOrder": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Displayorder"
          }
        },
        "type": "object",
        "required": [
          "compliancePeriodId",
          "description"
        ],
        "title": "CompliancePeriodSchema"
      },
      "ComplianceReportBaseSchema": {
        "properties": {
          "complianceReportId": {
            "type": "integer",
            "title": "Compliancereportid"
          },
          "compliancePeriodId": {
            "type": "integer",
            "title": "Complianceperiodid"
          },
          "compliancePeriod": {
            "$ref": "#/components/schemas/CompliancePeriodSchema"
          },
          "organizationId": {
            "type": "integer",
            "title": "Organizationid"
          },
          "organization": {
            "$ref": "#/components/schemas/ComplianceReportOrganizationSchema"
          },
          "summary": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SummarySchema"
              },
              {
                "type": "null"
              }
            ]
          },
          "currentStatusId": {
            "type": "integer",
            "title": "Currentstatusid"
          },
          "currentStatus": {
            "$ref": "#/components/schemas/ComplianceReportStatusSchema"
          },
          "transactionId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Transactionid"
          },
          "nickname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nickname"
          },
          "supplementalNote": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Supplementalnote"
          },
          "updateDate": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updatedate"
          },
          "history": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ComplianceReportHistorySchema"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "History"
          }
        },
        "type": "object",
        "required": [
          "complianceReportId",
          "compliancePeriodId",
          "compliancePeriod",
          "organizationId",
          "organization",
          "summary",
          "currentStatusId",
          "currentStatus"
        ],
        "title": "ComplianceReportBaseSchema"
      },
      "ComplianceReportCreateSchema": {
        "properties": {
          "compliancePeriod": {
            "type": "string",
            "title": "Complianceperiod"
          },
          "organizationId": {
            "type": "integer",
            "title": "Organizationid"
          },
          "status": {
            "type": "string",
            "title": "Status"
          }
        },
        "type": "object",
        "required": [
          "compliancePeriod",
          "organizationId",
          "status"
        ],
        "title": "ComplianceReportCreateSchema"
      },
      "ComplianceReportHistorySchema": {
        "properties": {
          "complianceReportHistoryId": {
            "type": "integer",
            "title": "Compliancereporthistoryid"
          },
          "complianceReportId": {
            "type": "integer",
            "title": "Compliancereportid"
          },
          "status": {
            "$ref": "#/components/schemas/ComplianceReportStatusSchema"
          },
          "userProfile": {
            "$ref": "#/components/schemas/ComplianceReportUserSchema"
          },
          "createDate": {
            "type": "string",
            "format": "date-time",
            "title": "Createdate"
          }
        },
        "type": "object",
        "required": [
          "complianceReportHistoryId",
          "complianceReportId",
          "status",
          "userProfile",
          "createDate"
        ],
        "title": "ComplianceReportHistorySchema"
      },
      "ComplianceReportListSchema": {
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/PaginationResponseSchema"
          },
          "reports": {
            "items": {
              "$ref": "#/components/schemas/ComplianceReportBaseSchema"
            },
            "type": "array",
            "title": "Reports"
          }
        },
        "type": "object",
        "required": [
          "pagination",
          "reports"
        ],
        "title": "ComplianceReportListSchema"
      },
      "ComplianceReportOrganizationSchema": {
        "properties": {
          "organizationId": {
            "type": "integer",
            "title": "Organizationid"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "organizationId",
          "name"
        ],
        "title": "ComplianceReportOrganizationSchema"
      },
      "ComplianceReportRequestSchema": {
        "properties": {
          "complianceReportId": {
            "type": "integer",
            "title": "Compliancereportid"
          }
        },
        "type": "object",
        "required": [
          "complianceReportId"
        ],
        "title": "ComplianceReportRequestSchema"
      },
      "ComplianceReportStatusSchema": {
        "properties": {
          "complianceReportStatusId": {
            "type": "integer",
            "title": "Compliancereportstatusid"
          },
          "status": {
            "type": "string",
            "title": "Status"
          }
        },
        "type": "object",
        "required": [
          "complianceReportStatusId",
          "status"
        ],
        "title": "ComplianceReportStatusSchema"
      },
      "ComplianceReportSummaryRowSchema": {
        "properties": {
          "line": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Line",
            "default": ""
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "default": ""
          },
          "field": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Field",
            "default": ""
          },
          "gasoline": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gasoline",
            "default": 0
          },
          "diesel": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Diesel",
            "default": 0
          },
          "jetFuel": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Jetfuel",
            "default": 0
          },
          "value": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value",
            "default": 0
          },
          "totalValue": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Totalvalue",
            "default": 0
          },
          "format": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Format",
            "default": ""
          }
        },
        "type": "object",
        "title": "ComplianceReportSummaryRowSchema"
      },
      "ComplianceReportSummarySchema": {
        "properties": {
          "renewableFuelTargetSummary": {
            "items": {
              "$ref": "#/components/schemas/ComplianceReportSummaryRowSchema"
            },
            "type": "array",
            "title": "Renewablefueltargetsummary"
          },
          "lowCarbonFuelTargetSummary": {
            "items": {
              "$ref": "#/components/schemas/ComplianceReportSummaryRowSchema"
            },
            "type": "array",
            "title": "Lowcarbonfueltargetsummary"
          },
          "nonCompliancePenaltySummary": {
            "items": {
              "$ref": "#/components/schemas/ComplianceReportSummaryRowSchema"
            },
            "type": "array",
            "title": "Noncompliancepenaltysummary"
          },
          "summaryId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Summaryid"
          },
          "complianceReportId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Compliancereportid"
          },
          "supplementalReportId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Supplementalreportid"
          },
          "version": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version"
          },
          "isLocked": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Islocked",
            "default": false
          },
          "quarter": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Quarter"
          }
        },
        "type": "object",
        "required": [
          "renewableFuelTargetSummary",
          "lowCarbonFuelTargetSummary",
          "nonCompliancePenaltySummary"
        ],
        "title": "ComplianceReportSummarySchema"
      },
      "ComplianceReportUpdateSchema": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "supplementalNote": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Supplementalnote"
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "ComplianceReportUpdateSchema"
      },
      "ComplianceReportUserSchema": {
        "properties": {
          "firstName": {
            "type": "string",
            "title": "Firstname"
          },
          "lastName": {
            "type": "string",
            "title": "Lastname"
          },
          "organization": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ComplianceReportOrganizationSchema"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "firstName",
          "lastName"
        ],
        "title": "ComplianceReportUserSchema"
      },
      "DeleteAllocationAgreementResponseSchema": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "message"
        ],
        "title": "DeleteAllocationAgreementResponseSchema"
      },
      "DeleteFinalSupplyEquipmentResponseSchema": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "message"
        ],
        "title": "DeleteFinalSupplyEquipmentResponseSchema"
      },
      "DeleteFuelCodeResponseSchema": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "message"
        ],
        "title": "DeleteFuelCodeResponseSchema"
      },
      "DeleteFuelExportResponseSchema": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message"
        ],
        "title": "DeleteFuelExportResponseSchema"
      },
      "DeleteFuelSupplyResponseSchema": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message"
        ],
        "title": "DeleteFuelSupplyResponseSchema"
      },
      "DeleteNotionalTransferResponseSchema": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "message"
        ],
        "title": "DeleteNotionalTransferResponseSchema"
      },
      "DeleteOtherUsesResponseSchema": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "message"
        ],
        "title": "DeleteOtherUsesResponseSchema"
      },
      "DirectorReviewCountsSchema": {
        "properties": {
          "transfers": {
            "type": "integer",
            "title": "Transfers"
          },
          "complianceReports": {
            "type": "integer",
            "title": "Compliancereports"
          },
          "initiativeAgreements": {
            "type": "integer",
            "title": "Initiativeagreements"
          },
          "adminAdjustments": {
            "type": "integer",
            "title": "Adminadjustments"
          }
        },
        "type": "object",
        "required": [
          "transfers",
          "complianceReports",
          "initiativeAgreements",
          "adminAdjustments"
        ],
        "title": "DirectorReviewCountsSchema"
      },
      "EndUseTypeSchema": {
        "properties": {
          "endUseTypeId": {
            "type": "integer",
            "title": "Endusetypeid"
          },
          "type": {
            "type": "string",
            "title": "Type"
          },
          "subType": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Subtype"
          }
        },
        "type": "object",
        "required": [
          "endUseTypeId",
          "type"
        ],
        "title": "EndUseTypeSchema"
      },
      "EnergyDensitySchema": {
        "properties": {
          "energyDensityId": {
            "type": "integer",
            "title": "Energydensityid"
          },
          "energyDensity": {
            "type": "number",
            "title": "Energydensity"
          },
          "unit": {
            "$ref": "#/components/schemas/UnitOfMeasureSchema"
          }
        },
        "type": "object",
        "required": [
          "energyDensityId",
          "energyDensity",
          "unit"
        ],
        "title": "EnergyDensitySchema"
      },
      "EnergyEffectivenessRatioSchema": {
        "properties": {
          "eerId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Eerid"
          },
          "fuelCategory": {
            "$ref": "#/components/schemas/FuelCategorySchema"
          },
          "endUseType": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EndUseTypeSchema"
              },
              {
                "type": "null"
              }
            ]
          },
          "energyEffectivenessRatio": {
            "type": "number",
            "title": "Energyeffectivenessratio"
          }
        },
        "type": "object",
        "required": [
          "eerId",
          "fuelCategory",
          "endUseType",
          "energyEffectivenessRatio"
        ],
        "title": "EnergyEffectivenessRatioSchema"
      },
      "EntityResponse": {
        "properties": {
          "status": {
            "type": "integer",
            "title": "Status"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "error": {
            "type": "object",
            "title": "Error",
            "default": {}
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "default": 0
          },
          "size": {
            "type": "integer",
            "title": "Size",
            "default": 10
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "default": 1
          },
          "total_pages": {
            "type": "integer",
            "title": "Total Pages",
            "default": 1
          },
          "data": {
            "title": "Data",
            "default": {}
          }
        },
        "type": "object",
        "required": [
          "status",
          "message"
        ],
        "title": "EntityResponse",
        "deprecated": true,
        "example": {
          "data": [],
          "error": {},
          "message": "Success",
          "page": 1,
          "size": 10,
          "status": 200,
          "total": 0,
          "total_pages": 1
        }
      },
      "EntityTypeEnum": {
        "type": "string",
        "enum": [
          "Transfer",
          "initiativeAgreement",
          "administrativeAdjustment",
          "Assessment",
          "complianceReport"
        ],
        "title": "EntityTypeEnum"
      },
      "ExpectedUseTypeSchema": {
        "properties": {
          "expectedUseTypeId": {
            "type": "integer",
            "title": "Expectedusetypeid"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "expectedUseTypeId",
          "name"
        ],
        "title": "ExpectedUseTypeSchema"
      },
      "FPLocationsSchema": {
        "properties": {
          "fuelProductionFacilityCity": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fuelproductionfacilitycity"
          },
          "fuelProductionFacilityProvinceState": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fuelproductionfacilityprovincestate"
          },
          "fuelProductionFacilityCountry": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fuelproductionfacilitycountry"
          }
        },
        "type": "object",
        "title": "FPLocationsSchema"
      },
      "FSEOptionsSchema": {
        "properties": {
          "intendedUseTypes": {
            "items": {
              "$ref": "#/components/schemas/EndUseTypeSchema"
            },
            "type": "array",
            "title": "Intendedusetypes"
          },
          "fuelMeasurementTypes": {
            "items": {
              "$ref": "#/components/schemas/FuelMeasurementTypeSchema"
            },
            "type": "array",
            "title": "Fuelmeasurementtypes"
          },
          "levelsOfEquipment": {
            "items": {
              "$ref": "#/components/schemas/LevelOfEquipmentSchema"
            },
            "type": "array",
            "title": "Levelsofequipment"
          }
        },
        "type": "object",
        "required": [
          "intendedUseTypes",
          "fuelMeasurementTypes",
          "levelsOfEquipment"
        ],
        "title": "FSEOptionsSchema"
      },
      "FeedstockFuelTransportModeSchema": {
        "properties": {
          "feedstockFuelTransportModeId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedstockfueltransportmodeid"
          },
          "fuelCodeId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fuelcodeid"
          },
          "transportModeId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Transportmodeid"
          },
          "feedstockFuelTransportMode": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TransportModeSchema"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "FeedstockFuelTransportModeSchema"
      },
      "FieldOptions": {
        "properties": {
          "company": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Company"
          },
          "feedstock": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Feedstock"
          },
          "feedstockLocation": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Feedstocklocation"
          },
          "feedstockMisc": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Feedstockmisc"
          },
          "formerCompany": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Formercompany"
          },
          "contactName": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Contactname"
          },
          "contactEmail": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Contactemail"
          }
        },
        "type": "object",
        "required": [
          "company",
          "feedstock",
          "feedstockLocation",
          "feedstockMisc",
          "formerCompany",
          "contactName",
          "contactEmail"
        ],
        "title": "FieldOptions"
      },
      "FileResponseSchema": {
        "properties": {
          "documentId": {
            "type": "integer",
            "title": "Documentid"
          },
          "fileName": {
            "type": "string",
            "title": "Filename"
          },
          "fileSize": {
            "type": "integer",
            "title": "Filesize"
          }
        },
        "type": "object",
        "required": [
          "documentId",
          "fileName",
          "fileSize"
        ],
        "title": "FileResponseSchema"
      },
      "FilterModel": {
        "properties": {
          "filterType": {
            "type": "string",
            "title": "Filtertype"
          },
          "type": {
            "type": "string",
            "title": "Type"
          },
          "filter": {
            "anyOf": [
              {},
              {
                "type": "null"
              }
            ],
            "title": "Filter"
          },
          "field": {
            "type": "string",
            "title": "Field"
          },
          "dateFrom": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Datefrom"
          },
          "dateTo": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dateto"
          }
        },
        "type": "object",
        "title": "FilterModel"
      },
      "FinalSupplyEquipmentCreateSchema": {
        "properties": {
          "finalSupplyEquipmentId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Finalsupplyequipmentid"
          },
          "complianceReportId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Compliancereportid"
          },
          "supplyFromDate": {
            "type": "string",
            "format": "date",
            "title": "Supplyfromdate"
          },
          "supplyToDate": {
            "type": "string",
            "format": "date",
            "title": "Supplytodate"
          },
          "serialNbr": {
            "type": "string",
            "title": "Serialnbr"
          },
          "manufacturer": {
            "type": "string",
            "title": "Manufacturer"
          },
          "levelOfEquipment": {
            "type": "string",
            "title": "Levelofequipment"
          },
          "fuelMeasurementType": {
            "type": "string",
            "title": "Fuelmeasurementtype"
          },
          "intendedUses": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Intendeduses"
          },
          "streetAddress": {
            "type": "string",
            "title": "Streetaddress"
          },
          "city": {
            "type": "string",
            "title": "City"
          },
          "postalCode": {
            "type": "string",
            "pattern": "^[A-Za-z]\\d[A-Za-z] \\d[A-Za-z]\\d$",
            "title": "Postalcode"
          },
          "latitude": {
            "type": "number",
            "title": "Latitude"
          },
          "longitude": {
            "type": "number",
            "title": "Longitude"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "deleted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted"
          }
        },
        "type": "object",
        "required": [
          "supplyFromDate",
          "supplyToDate",
          "serialNbr",
          "manufacturer",
          "levelOfEquipment",
          "fuelMeasurementType",
          "intendedUses",
          "streetAddress",
          "city",
          "postalCode",
          "latitude",
          "longitude"
        ],
        "title": "FinalSupplyEquipmentCreateSchema"
      },
      "FinalSupplyEquipmentSchema": {
        "properties": {
          "finalSupplyEquipmentId": {
            "type": "integer",
            "title": "Finalsupplyequipmentid"
          },
          "complianceReportId": {
            "type": "integer",
            "title": "Compliancereportid"
          },
          "supplyFromDate": {
            "type": "string",
            "format": "date",
            "title": "Supplyfromdate"
          },
          "supplyToDate": {
            "type": "string",
            "format": "date",
            "title": "Supplytodate"
          },
          "registrationNbr": {
            "type": "string",
            "title": "Registrationnbr"
          },
          "serialNbr": {
            "type": "string",
            "title": "Serialnbr"
          },
          "manufacturer": {
            "type": "string",
            "title": "Manufacturer"
          },
          "levelOfEquipment": {
            "$ref": "#/components/schemas/LevelOfEquipmentSchema"
          },
          "fuelMeasurementType": {
            "$ref": "#/components/schemas/FuelMeasurementTypeSchema"
          },
          "intendedUseTypes": {
            "items": {
              "$ref": "#/components/schemas/EndUseTypeSchema"
            },
            "type": "array",
            "title": "Intendedusetypes"
          },
          "streetAddress": {
            "type": "string",
            "title": "Streetaddress"
          },
          "city": {
            "type": "string",
            "title": "City"
          },
          "postalCode": {
            "type": "string",
            "title": "Postalcode"
          },
          "latitude": {
            "type": "number",
            "title": "Latitude"
          },
          "longitude": {
            "type": "number",
            "title": "Longitude"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "required": [
          "finalSupplyEquipmentId",
          "complianceReportId",
          "supplyFromDate",
          "supplyToDate",
          "registrationNbr",
          "serialNbr",
          "manufacturer",
          "levelOfEquipment",
          "fuelMeasurementType",
          "intendedUseTypes",
          "streetAddress",
          "city",
          "postalCode",
          "latitude",
          "longitude"
        ],
        "title": "FinalSupplyEquipmentSchema"
      },
      "FinalSupplyEquipmentsSchema": {
        "properties": {
          "finalSupplyEquipments": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/FinalSupplyEquipmentSchema"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Finalsupplyequipments",
            "default": []
          },
          "pagination": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PaginationResponseSchema"
              },
              {
                "type": "null"
              }
            ],
            "default": {}
          }
        },
        "type": "object",
        "title": "FinalSupplyEquipmentsSchema"
      },
      "FinishedFuelTransportModeSchema": {
        "properties": {
          "finishedFuelTransportModeId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Finishedfueltransportmodeid"
          },
          "fuelCodeId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fuelcodeid"
          },
          "transportModeId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Transportmodeid"
          },
          "finishedFuelTransportMode": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TransportModeSchema"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "FinishedFuelTransportModeSchema"
      },
      "FuelCategoryResponseSchema": {
        "properties": {
          "fuelCategoryId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fuelcategoryid"
          },
          "category": {
            "type": "string",
            "title": "Category"
          }
        },
        "type": "object",
        "required": [
          "category"
        ],
        "title": "FuelCategoryResponseSchema"
      },
      "FuelCategorySchema": {
        "properties": {
          "fuelCategoryId": {
            "type": "integer",
            "title": "Fuelcategoryid"
          },
          "fuelCategory": {
            "type": "string",
            "title": "Fuelcategory"
          },
          "defaultAndPrescribedCi": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Defaultandprescribedci"
          }
        },
        "type": "object",
        "required": [
          "fuelCategoryId",
          "fuelCategory"
        ],
        "title": "FuelCategorySchema"
      },
      "FuelCodeCloneSchema": {
        "properties": {
          "fuelCodeId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fuelcodeid"
          },
          "fuelStatusId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fuelstatusid"
          },
          "prefixId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prefixid"
          },
          "fuelSuffix": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fuelsuffix"
          },
          "company": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Company"
          },
          "contactName": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contactname"
          },
          "contactEmail": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contactemail"
          },
          "carbonIntensity": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Carbonintensity"
          },
          "edrms": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Edrms"
          },
          "lastUpdated": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lastupdated"
          },
          "applicationDate": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Applicationdate"
          },
          "approvalDate": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Approvaldate"
          },
          "effectiveDate": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Effectivedate"
          },
          "expirationDate": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expirationdate"
          },
          "fuelTypeId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fueltypeid"
          },
          "feedstock": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedstock"
          },
          "feedstockLocation": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedstocklocation"
          },
          "feedstockMisc": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedstockmisc"
          },
          "fuelProductionFacilityCity": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fuelproductionfacilitycity"
          },
          "fuelProductionFacilityProvinceState": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fuelproductionfacilityprovincestate"
          },
          "fuelProductionFacilityCountry": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fuelproductionfacilitycountry"
          },
          "facilityNameplateCapacity": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Facilitynameplatecapacity"
          },
          "facilityNameplateCapacityUnit": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FuelTypeQuantityUnitsEnumSchema"
              },
              {
                "type": "null"
              }
            ]
          },
          "formerCompany": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Formercompany"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "fuelCodeStatus": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/lcfs__web__api__fuel_code__schema__FuelCodeStatusSchema"
              },
              {
                "type": "null"
              }
            ]
          },
          "fuelCodePrefix": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FuelCodePrefixSchema"
              },
              {
                "type": "null"
              }
            ]
          },
          "fuelCodeType": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/lcfs__web__api__fuel_code__schema__FuelTypeSchema"
              },
              {
                "type": "null"
              }
            ]
          },
          "feedstockFuelTransportModes": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/FeedstockFuelTransportModeSchema"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedstockfueltransportmodes"
          },
          "finishedFuelTransportModes": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/FinishedFuelTransportModeSchema"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Finishedfueltransportmodes"
          }
        },
        "type": "object",
        "title": "FuelCodeCloneSchema"
      },
      "FuelCodeCreateSchema": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "fuelCodeId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fuelcodeid"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "prefix": {
            "type": "string",
            "title": "Prefix"
          },
          "prefixId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prefixid"
          },
          "fuelSuffix": {
            "type": "string",
            "title": "Fuelsuffix"
          },
          "carbonIntensity": {
            "type": "number",
            "title": "Carbonintensity"
          },
          "edrms": {
            "type": "string",
            "title": "Edrms"
          },
          "company": {
            "type": "string",
            "title": "Company"
          },
          "lastUpdated": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lastupdated"
          },
          "contactName": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contactname"
          },
          "contactEmail": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contactemail"
          },
          "applicationDate": {
            "type": "string",
            "format": "date",
            "title": "Applicationdate"
          },
          "approvalDate": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Approvaldate"
          },
          "effectiveDate": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Effectivedate"
          },
          "expirationDate": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expirationdate"
          },
          "fuel": {
            "type": "string",
            "title": "Fuel"
          },
          "fuelTypeId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fueltypeid"
          },
          "feedstock": {
            "type": "string",
            "title": "Feedstock"
          },
          "feedstockLocation": {
            "type": "string",
            "title": "Feedstocklocation"
          },
          "feedstockMisc": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedstockmisc"
          },
          "fuelProductionFacilityCity": {
            "type": "string",
            "title": "Fuelproductionfacilitycity"
          },
          "fuelProductionFacilityProvinceState": {
            "type": "string",
            "title": "Fuelproductionfacilityprovincestate"
          },
          "fuelProductionFacilityCountry": {
            "type": "string",
            "title": "Fuelproductionfacilitycountry"
          },
          "facilityNameplateCapacity": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Facilitynameplatecapacity"
          },
          "facilityNameplateCapacityUnit": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FuelTypeQuantityUnitsEnumSchema"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Facilitynameplatecapacityunit"
          },
          "feedstockFuelTransportMode": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedstockfueltransportmode"
          },
          "finishedFuelTransportMode": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Finishedfueltransportmode"
          },
          "feedstockFuelTransportModes": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/FeedstockFuelTransportModeSchema"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedstockfueltransportmodes"
          },
          "finishedFuelTransportModes": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/FinishedFuelTransportModeSchema"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Finishedfueltransportmodes"
          },
          "formerCompany": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Formercompany"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "isValid": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Isvalid",
            "default": false
          },
          "validationMsg": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validationmsg"
          },
          "deleted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted"
          }
        },
        "type": "object",
        "required": [
          "prefix",
          "fuelSuffix",
          "carbonIntensity",
          "edrms",
          "company",
          "applicationDate",
          "fuel",
          "feedstock",
          "feedstockLocation",
          "fuelProductionFacilityCity",
          "fuelProductionFacilityProvinceState",
          "fuelProductionFacilityCountry"
        ],
        "title": "FuelCodeCreateSchema"
      },
      "FuelCodePrefixSchema": {
        "properties": {
          "fuelCodePrefixId": {
            "type": "integer",
            "title": "Fuelcodeprefixid"
          },
          "nextFuelCode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nextfuelcode"
          },
          "prefix": {
            "type": "string",
            "title": "Prefix"
          }
        },
        "type": "object",
        "required": [
          "fuelCodePrefixId",
          "prefix"
        ],
        "title": "FuelCodePrefixSchema"
      },
      "FuelCodeSchema-Input": {
        "properties": {
          "fuelCodeId": {
            "type": "integer",
            "title": "Fuelcodeid"
          },
          "fuelCodePrefixId": {
            "type": "integer",
            "title": "Fuelcodeprefixid"
          },
          "fuelCode": {
            "type": "string",
            "title": "Fuelcode"
          },
          "fuelCodeCarbonIntensity": {
            "type": "number",
            "title": "Fuelcodecarbonintensity"
          }
        },
        "type": "object",
        "required": [
          "fuelCodeId",
          "fuelCodePrefixId",
          "fuelCode",
          "fuelCodeCarbonIntensity"
        ],
        "title": "FuelCodeSchema"
      },
      "FuelCodeStatusEnumSchema": {
        "type": "string",
        "enum": [
          "Draft",
          "Approved",
          "Deleted"
        ],
        "title": "FuelCodeStatusEnumSchema"
      },
      "FuelCodesSchema": {
        "properties": {
          "fuelCodes": {
            "items": {
              "$ref": "#/components/schemas/lcfs__web__api__fuel_code__schema__FuelCodeSchema"
            },
            "type": "array",
            "title": "Fuelcodes"
          },
          "pagination": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PaginationResponseSchema"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "fuelCodes"
        ],
        "title": "FuelCodesSchema"
      },
      "FuelExportCreateSchema": {
        "properties": {
          "fuelExportId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fuelexportid"
          },
          "complianceReportId": {
            "type": "integer",
            "title": "Compliancereportid"
          },
          "compliancePeriod": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Complianceperiod"
          },
          "fuelType": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/FuelTypeSchema-Input"
              }
            ],
            "title": "Fueltype"
          },
          "fuelTypeId": {
            "type": "integer",
            "title": "Fueltypeid"
          },
          "fuelCategory": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/FuelCategoryResponseSchema"
              }
            ],
            "title": "Fuelcategory"
          },
          "fuelCategoryId": {
            "type": "integer",
            "title": "Fuelcategoryid"
          },
          "endUseType": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/EndUseTypeSchema"
              },
              {
                "type": "null"
              }
            ],
            "title": "Endusetype"
          },
          "endUseId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enduseid"
          },
          "provisionOfTheAct": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/ProvisionOfTheActSchema"
              }
            ],
            "title": "Provisionoftheact"
          },
          "provisionOfTheActId": {
            "type": "integer",
            "title": "Provisionoftheactid"
          },
          "fuelCode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/FuelCodeSchema-Input"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fuelcode"
          },
          "fuelCodeId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fuelcodeid"
          },
          "quantity": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Quantity"
          },
          "units": {
            "type": "string",
            "title": "Units"
          },
          "exportDate": {
            "type": "string",
            "format": "date",
            "title": "Exportdate"
          },
          "complianceUnits": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Complianceunits",
            "default": 0
          },
          "targetCi": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Targetci",
            "default": 0
          },
          "ciOfFuel": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cioffuel",
            "default": 0
          },
          "energyDensity": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Energydensity",
            "default": 0
          },
          "eer": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Eer",
            "default": 0
          },
          "energy": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Energy",
            "default": 0
          },
          "customFuelId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Customfuelid"
          },
          "deleted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted"
          }
        },
        "type": "object",
        "required": [
          "complianceReportId",
          "fuelType",
          "fuelTypeId",
          "fuelCategory",
          "fuelCategoryId",
          "provisionOfTheAct",
          "provisionOfTheActId",
          "quantity",
          "units",
          "exportDate"
        ],
        "title": "FuelExportCreateSchema"
      },
      "FuelExportSchema": {
        "properties": {
          "fuelExportId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fuelexportid"
          },
          "complianceReportId": {
            "type": "integer",
            "title": "Compliancereportid"
          },
          "compliancePeriod": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Complianceperiod"
          },
          "fuelTypeId": {
            "type": "integer",
            "title": "Fueltypeid"
          },
          "fuelType": {
            "$ref": "#/components/schemas/lcfs__web__api__fuel_export__schema__FuelTypeSchema"
          },
          "quantity": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Quantity"
          },
          "units": {
            "type": "string",
            "title": "Units"
          },
          "exportDate": {
            "type": "string",
            "format": "date",
            "title": "Exportdate"
          },
          "complianceUnits": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Complianceunits",
            "default": 0
          },
          "targetCi": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Targetci"
          },
          "ciOfFuel": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cioffuel"
          },
          "energyDensity": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Energydensity"
          },
          "eer": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Eer"
          },
          "energy": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Energy"
          },
          "fuelCategoryId": {
            "type": "integer",
            "title": "Fuelcategoryid"
          },
          "fuelCategory": {
            "$ref": "#/components/schemas/FuelCategoryResponseSchema"
          },
          "fuelCodeId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fuelcodeid"
          },
          "fuelCode": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/lcfs__web__api__fuel_export__schema__FuelCodeResponseSchema"
              },
              {
                "type": "null"
              }
            ]
          },
          "provisionOfTheActId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provisionoftheactid"
          },
          "provisionOfTheAct": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ProvisionOfTheActSchema"
              },
              {
                "type": "null"
              }
            ]
          },
          "customFuelId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Customfuelid"
          },
          "endUseId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enduseid"
          },
          "endUseType": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EndUseTypeSchema"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "complianceReportId",
          "fuelTypeId",
          "fuelType",
          "quantity",
          "units",
          "exportDate",
          "fuelCategoryId",
          "fuelCategory"
        ],
        "title": "FuelExportSchema"
      },
      "FuelExportsSchema": {
        "properties": {
          "fuelExports": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/FuelExportSchema"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fuelexports",
            "default": []
          },
          "pagination": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PaginationResponseSchema"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "FuelExportsSchema"
      },
      "FuelMeasurementTypeSchema": {
        "properties": {
          "fuelMeasurementTypeId": {
            "type": "integer",
            "title": "Fuelmeasurementtypeid"
          },
          "type": {
            "type": "string",
            "title": "Type"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "displayOrder": {
            "type": "integer",
            "title": "Displayorder"
          }
        },
        "type": "object",
        "required": [
          "fuelMeasurementTypeId",
          "type",
          "displayOrder"
        ],
        "title": "FuelMeasurementTypeSchema"
      },
      "FuelSuppliesSchema": {
        "properties": {
          "fuelSupplies": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/FuelSupplyResponseSchema"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fuelsupplies",
            "default": []
          },
          "pagination": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PaginationResponseSchema"
              },
              {
                "type": "null"
              }
            ],
            "default": {}
          }
        },
        "type": "object",
        "title": "FuelSuppliesSchema"
      },
      "FuelSupplyCreateUpdateSchema": {
        "properties": {
          "complianceReportId": {
            "type": "integer",
            "title": "Compliancereportid"
          },
          "fuelSupplyId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fuelsupplyid"
          },
          "fuelTypeId": {
            "type": "integer",
            "title": "Fueltypeid"
          },
          "fuelCategoryId": {
            "type": "integer",
            "title": "Fuelcategoryid"
          },
          "endUseId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enduseid"
          },
          "provisionOfTheActId": {
            "type": "integer",
            "title": "Provisionoftheactid"
          },
          "quantity": {
            "type": "integer",
            "title": "Quantity"
          },
          "units": {
            "type": "string",
            "title": "Units"
          },
          "fuelCodeId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fuelcodeid"
          },
          "targetCi": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Targetci"
          },
          "ciOfFuel": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cioffuel"
          },
          "energyDensity": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Energydensity"
          },
          "eer": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Eer"
          },
          "energy": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Energy"
          },
          "customFuelId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Customfuelid"
          },
          "deleted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted"
          }
        },
        "type": "object",
        "required": [
          "complianceReportId",
          "fuelTypeId",
          "fuelCategoryId",
          "provisionOfTheActId",
          "quantity",
          "units"
        ],
        "title": "FuelSupplyCreateUpdateSchema"
      },
      "FuelSupplyResponseSchema": {
        "properties": {
          "fuelSupplyId": {
            "type": "integer",
            "title": "Fuelsupplyid"
          },
          "complianceReportId": {
            "type": "integer",
            "title": "Compliancereportid"
          },
          "fuelTypeId": {
            "type": "integer",
            "title": "Fueltypeid"
          },
          "fuelType": {
            "$ref": "#/components/schemas/lcfs__web__api__fuel_supply__schema__FuelTypeSchema"
          },
          "quantity": {
            "type": "integer",
            "title": "Quantity"
          },
          "units": {
            "type": "string",
            "title": "Units"
          },
          "complianceUnits": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Complianceunits"
          },
          "targetCi": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Targetci"
          },
          "ciOfFuel": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cioffuel"
          },
          "energyDensity": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Energydensity"
          },
          "eer": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Eer"
          },
          "energy": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Energy"
          },
          "fuelCategoryId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fuelcategoryid"
          },
          "fuelCategory": {
            "$ref": "#/components/schemas/FuelCategoryResponseSchema"
          },
          "fuelCodeId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fuelcodeid"
          },
          "fuelCode": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/lcfs__web__api__fuel_supply__schema__FuelCodeResponseSchema"
              },
              {
                "type": "null"
              }
            ]
          },
          "provisionOfTheActId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provisionoftheactid"
          },
          "provisionOfTheAct": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ProvisionOfTheActSchema"
              },
              {
                "type": "null"
              }
            ]
          },
          "customFuelId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Customfuelid"
          },
          "endUseId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enduseid"
          },
          "endUseType": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EndUseTypeSchema"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "fuelSupplyId",
          "complianceReportId",
          "fuelTypeId",
          "fuelType",
          "quantity",
          "units",
          "fuelCategory"
        ],
        "title": "FuelSupplyResponseSchema"
      },
      "FuelTypeQuantityUnitsEnumSchema": {
        "type": "string",
        "enum": [
          "L",
          "kg",
          "kWh",
          "m3"
        ],
        "title": "FuelTypeQuantityUnitsEnumSchema"
      },
      "FuelTypeSchema-Input": {
        "properties": {
          "fuelTypeId": {
            "type": "integer",
            "title": "Fueltypeid"
          },
          "fuelType": {
            "type": "string",
            "title": "Fueltype"
          },
          "fossilDerived": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fossilderived"
          },
          "provision1Id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provision1Id"
          },
          "provision2Id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provision2Id"
          },
          "defaultCarbonIntensity": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Defaultcarbonintensity"
          },
          "units": {
            "$ref": "#/components/schemas/FuelTypeQuantityUnitsEnumSchema"
          }
        },
        "type": "object",
        "required": [
          "fuelTypeId",
          "fuelType",
          "units"
        ],
        "title": "FuelTypeSchema"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "HistoryUserSchema": {
        "properties": {
          "firstName": {
            "type": "string",
            "title": "Firstname"
          },
          "lastName": {
            "type": "string",
            "title": "Lastname"
          }
        },
        "type": "object",
        "required": [
          "firstName",
          "lastName"
        ],
        "title": "HistoryUserSchema"
      },
      "InitiativeAgreementCreateSchema": {
        "properties": {
          "complianceUnits": {
            "type": "integer",
            "title": "Complianceunits"
          },
          "currentStatus": {
            "type": "string",
            "title": "Currentstatus"
          },
          "transactionEffectiveDate": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Transactioneffectivedate"
          },
          "toOrganizationId": {
            "type": "integer",
            "title": "Toorganizationid"
          },
          "govComment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Govcomment"
          },
          "internalComment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Internalcomment"
          }
        },
        "type": "object",
        "required": [
          "complianceUnits",
          "currentStatus",
          "toOrganizationId"
        ],
        "title": "InitiativeAgreementCreateSchema"
      },
      "InitiativeAgreementHistorySchema": {
        "properties": {
          "createDate": {
            "type": "string",
            "format": "date-time",
            "title": "Createdate"
          },
          "initiativeAgreementStatus": {
            "$ref": "#/components/schemas/InitiativeAgreementStatusSchema"
          },
          "userProfile": {
            "$ref": "#/components/schemas/HistoryUserSchema"
          }
        },
        "type": "object",
        "required": [
          "createDate",
          "initiativeAgreementStatus",
          "userProfile"
        ],
        "title": "InitiativeAgreementHistorySchema"
      },
      "InitiativeAgreementSchema": {
        "properties": {
          "complianceUnits": {
            "type": "integer",
            "title": "Complianceunits"
          },
          "currentStatus": {
            "$ref": "#/components/schemas/InitiativeAgreementStatusSchema"
          },
          "transactionEffectiveDate": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Transactioneffectivedate"
          },
          "toOrganizationId": {
            "type": "integer",
            "title": "Toorganizationid"
          },
          "govComment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Govcomment"
          },
          "internalComment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Internalcomment"
          },
          "initiativeAgreementId": {
            "type": "integer",
            "title": "Initiativeagreementid"
          },
          "toOrganization": {
            "$ref": "#/components/schemas/lcfs__web__api__initiative_agreement__schema__OrganizationSchema"
          },
          "history": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/InitiativeAgreementHistorySchema"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "History"
          },
          "returned": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Returned",
            "default": false
          },
          "createDate": {
            "type": "string",
            "format": "date-time",
            "title": "Createdate"
          }
        },
        "type": "object",
        "required": [
          "complianceUnits",
          "currentStatus",
          "toOrganizationId",
          "initiativeAgreementId",
          "toOrganization",
          "history",
          "createDate"
        ],
        "title": "InitiativeAgreementSchema"
      },
      "InitiativeAgreementStatusSchema": {
        "properties": {
          "initiativeAgreementStatusId": {
            "type": "integer",
            "title": "Initiativeagreementstatusid"
          },
          "status": {
            "type": "string",
            "title": "Status"
          }
        },
        "type": "object",
        "required": [
          "initiativeAgreementStatusId",
          "status"
        ],
        "title": "InitiativeAgreementStatusSchema"
      },
      "InitiativeAgreementUpdateSchema": {
        "properties": {
          "complianceUnits": {
            "type": "integer",
            "title": "Complianceunits"
          },
          "currentStatus": {
            "type": "string",
            "title": "Currentstatus"
          },
          "transactionEffectiveDate": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Transactioneffectivedate"
          },
          "toOrganizationId": {
            "type": "integer",
            "title": "Toorganizationid"
          },
          "govComment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Govcomment"
          },
          "internalComment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Internalcomment"
          },
          "initiativeAgreementId": {
            "type": "integer",
            "title": "Initiativeagreementid"
          }
        },
        "type": "object",
        "required": [
          "complianceUnits",
          "currentStatus",
          "toOrganizationId",
          "initiativeAgreementId"
        ],
        "title": "InitiativeAgreementUpdateSchema"
      },
      "InternalCommentCreateSchema": {
        "properties": {
          "entityType": {
            "$ref": "#/components/schemas/EntityTypeEnum"
          },
          "entityId": {
            "type": "integer",
            "title": "Entityid"
          },
          "comment": {
            "type": "string",
            "title": "Comment"
          },
          "audienceScope": {
            "$ref": "#/components/schemas/AudienceScopeEnum"
          }
        },
        "type": "object",
        "required": [
          "entityType",
          "entityId",
          "comment",
          "audienceScope"
        ],
        "title": "InternalCommentCreateSchema"
      },
      "InternalCommentResponseSchema": {
        "properties": {
          "internalCommentId": {
            "type": "integer",
            "title": "Internalcommentid"
          },
          "comment": {
            "type": "string",
            "title": "Comment"
          },
          "audienceScope": {
            "$ref": "#/components/schemas/AudienceScopeEnum"
          },
          "createUser": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Createuser"
          },
          "createDate": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Createdate"
          },
          "updateDate": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updatedate"
          },
          "fullName": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fullname"
          }
        },
        "type": "object",
        "required": [
          "internalCommentId",
          "comment",
          "audienceScope"
        ],
        "title": "InternalCommentResponseSchema"
      },
      "InternalCommentUpdateSchema": {
        "properties": {
          "comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment"
          }
        },
        "type": "object",
        "title": "InternalCommentUpdateSchema"
      },
      "LevelOfEquipmentSchema": {
        "properties": {
          "levelOfEquipmentId": {
            "type": "integer",
            "title": "Levelofequipmentid"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "displayOrder": {
            "type": "integer",
            "title": "Displayorder"
          }
        },
        "type": "object",
        "required": [
          "levelOfEquipmentId",
          "name",
          "displayOrder"
        ],
        "title": "LevelOfEquipmentSchema"
      },
      "Message": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "message"
        ],
        "title": "Message",
        "description": "Simple message model."
      },
      "NotificationChannelSubscriptionRequest": {
        "properties": {
          "isEnabled": {
            "type": "boolean",
            "title": "Isenabled"
          },
          "channelId": {
            "type": "integer",
            "title": "Channelid"
          },
          "notificationTypeId": {
            "type": "integer",
            "title": "Notificationtypeid"
          }
        },
        "type": "object",
        "required": [
          "isEnabled",
          "channelId",
          "notificationTypeId"
        ],
        "title": "NotificationChannelSubscriptionRequest"
      },
      "NotificationMessageRequest": {
        "properties": {
          "isRead": {
            "type": "boolean",
            "title": "Isread"
          },
          "isArchived": {
            "type": "boolean",
            "title": "Isarchived"
          }
        },
        "type": "object",
        "required": [
          "isRead",
          "isArchived"
        ],
        "title": "NotificationMessageRequest"
      },
      "NotionalTransferCreateSchema": {
        "properties": {
          "legalName": {
            "type": "string",
            "title": "Legalname"
          },
          "addressForService": {
            "type": "string",
            "title": "Addressforservice"
          },
          "fuelCategory": {
            "type": "string",
            "title": "Fuelcategory"
          },
          "receivedOrTransferred": {
            "$ref": "#/components/schemas/ReceivedOrTransferredEnumSchema"
          },
          "quantity": {
            "type": "integer",
            "title": "Quantity"
          },
          "notionalTransferId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notionaltransferid"
          },
          "complianceReportId": {
            "type": "integer",
            "title": "Compliancereportid"
          },
          "deleted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted"
          }
        },
        "type": "object",
        "required": [
          "legalName",
          "addressForService",
          "fuelCategory",
          "receivedOrTransferred",
          "quantity",
          "complianceReportId"
        ],
        "title": "NotionalTransferCreateSchema"
      },
      "NotionalTransferFuelCategorySchema": {
        "properties": {
          "fuelCategoryId": {
            "type": "integer",
            "title": "Fuelcategoryid"
          },
          "category": {
            "type": "string",
            "title": "Category"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "fuelCategoryId",
          "category"
        ],
        "title": "NotionalTransferFuelCategorySchema"
      },
      "NotionalTransferSchema": {
        "properties": {
          "legalName": {
            "type": "string",
            "title": "Legalname"
          },
          "addressForService": {
            "type": "string",
            "title": "Addressforservice"
          },
          "fuelCategory": {
            "type": "string",
            "title": "Fuelcategory"
          },
          "receivedOrTransferred": {
            "$ref": "#/components/schemas/ReceivedOrTransferredEnumSchema"
          },
          "quantity": {
            "type": "integer",
            "title": "Quantity"
          },
          "notionalTransferId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notionaltransferid"
          },
          "complianceReportId": {
            "type": "integer",
            "title": "Compliancereportid"
          },
          "deleted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted"
          }
        },
        "type": "object",
        "required": [
          "legalName",
          "addressForService",
          "fuelCategory",
          "receivedOrTransferred",
          "quantity",
          "complianceReportId"
        ],
        "title": "NotionalTransferSchema"
      },
      "NotionalTransferTableOptionsSchema": {
        "properties": {
          "fuelCategories": {
            "items": {
              "$ref": "#/components/schemas/NotionalTransferFuelCategorySchema"
            },
            "type": "array",
            "title": "Fuelcategories"
          },
          "receivedOrTransferred": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Receivedortransferred"
          }
        },
        "type": "object",
        "required": [
          "fuelCategories",
          "receivedOrTransferred"
        ],
        "title": "NotionalTransferTableOptionsSchema"
      },
      "NotionalTransfersAllSchema": {
        "properties": {
          "notionalTransfers": {
            "items": {
              "$ref": "#/components/schemas/NotionalTransferSchema"
            },
            "type": "array",
            "title": "Notionaltransfers"
          }
        },
        "type": "object",
        "required": [
          "notionalTransfers"
        ],
        "title": "NotionalTransfersAllSchema"
      },
      "NotionalTransfersSchema": {
        "properties": {
          "notionalTransfers": {
            "items": {
              "$ref": "#/components/schemas/NotionalTransferSchema"
            },
            "type": "array",
            "title": "Notionaltransfers"
          },
          "pagination": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PaginationResponseSchema"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "notionalTransfers"
        ],
        "title": "NotionalTransfersSchema"
      },
      "OrgComplianceReportCountsSchema": {
        "properties": {
          "inProgress": {
            "type": "integer",
            "title": "Inprogress"
          },
          "awaitingGovReview": {
            "type": "integer",
            "title": "Awaitinggovreview"
          }
        },
        "type": "object",
        "required": [
          "inProgress",
          "awaitingGovReview"
        ],
        "title": "OrgComplianceReportCountsSchema"
      },
      "OrganizarionTransactionCountsSchema": {
        "properties": {
          "transfers": {
            "type": "integer",
            "title": "Transfers"
          }
        },
        "type": "object",
        "required": [
          "transfers"
        ],
        "title": "OrganizarionTransactionCountsSchema"
      },
      "OrganizationAddressCreateSchema": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "streetAddress": {
            "type": "string",
            "title": "Streetaddress"
          },
          "addressOther": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Addressother"
          },
          "city": {
            "type": "string",
            "title": "City"
          },
          "provinceState": {
            "type": "string",
            "title": "Provincestate"
          },
          "country": {
            "type": "string",
            "title": "Country"
          },
          "postalcodeZipcode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Postalcodezipcode"
          }
        },
        "type": "object",
        "required": [
          "name",
          "streetAddress",
          "city",
          "provinceState",
          "country"
        ],
        "title": "OrganizationAddressCreateSchema"
      },
      "OrganizationAddressSchema": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "streetAddress": {
            "type": "string",
            "title": "Streetaddress"
          },
          "addressOther": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Addressother"
          },
          "city": {
            "type": "string",
            "title": "City"
          },
          "provinceState": {
            "type": "string",
            "title": "Provincestate"
          },
          "country": {
            "type": "string",
            "title": "Country"
          },
          "postalcodeZipcode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Postalcodezipcode"
          },
          "organizationId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organizationid"
          }
        },
        "type": "object",
        "required": [
          "name",
          "streetAddress",
          "city",
          "provinceState",
          "country"
        ],
        "title": "OrganizationAddressSchema"
      },
      "OrganizationAttorneyAddressCreateSchema": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "streetAddress": {
            "type": "string",
            "title": "Streetaddress"
          },
          "addressOther": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Addressother"
          },
          "city": {
            "type": "string",
            "title": "City"
          },
          "provinceState": {
            "type": "string",
            "title": "Provincestate"
          },
          "country": {
            "type": "string",
            "title": "Country"
          },
          "postalcodeZipcode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Postalcodezipcode"
          }
        },
        "type": "object",
        "required": [
          "name",
          "streetAddress",
          "city",
          "provinceState",
          "country"
        ],
        "title": "OrganizationAttorneyAddressCreateSchema"
      },
      "OrganizationAttorneyAddressSchema": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "streetAddress": {
            "type": "string",
            "title": "Streetaddress"
          },
          "addressOther": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Addressother"
          },
          "city": {
            "type": "string",
            "title": "City"
          },
          "provinceState": {
            "type": "string",
            "title": "Provincestate"
          },
          "country": {
            "type": "string",
            "title": "Country"
          },
          "postalcodeZipcode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Postalcodezipcode"
          },
          "organizationId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organizationid"
          }
        },
        "type": "object",
        "required": [
          "name",
          "streetAddress",
          "city",
          "provinceState",
          "country"
        ],
        "title": "OrganizationAttorneyAddressSchema"
      },
      "OrganizationBalanceResponseSchema": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "registered": {
            "type": "boolean",
            "title": "Registered"
          },
          "organizationId": {
            "type": "integer",
            "title": "Organizationid"
          },
          "totalBalance": {
            "type": "integer",
            "title": "Totalbalance"
          },
          "reservedBalance": {
            "type": "integer",
            "title": "Reservedbalance"
          }
        },
        "type": "object",
        "required": [
          "name",
          "registered",
          "organizationId",
          "totalBalance",
          "reservedBalance"
        ],
        "title": "OrganizationBalanceResponseSchema"
      },
      "OrganizationCreateSchema": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "operatingName": {
            "type": "string",
            "title": "Operatingname"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "edrmsRecord": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Edrmsrecord"
          },
          "organizationStatusId": {
            "type": "integer",
            "title": "Organizationstatusid"
          },
          "organizationTypeId": {
            "type": "integer",
            "title": "Organizationtypeid"
          },
          "address": {
            "$ref": "#/components/schemas/OrganizationAddressCreateSchema"
          },
          "attorneyAddress": {
            "$ref": "#/components/schemas/OrganizationAttorneyAddressCreateSchema"
          }
        },
        "type": "object",
        "required": [
          "name",
          "operatingName",
          "organizationStatusId",
          "organizationTypeId",
          "address",
          "attorneyAddress"
        ],
        "title": "OrganizationCreateSchema"
      },
      "OrganizationDetailsSchema": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          }
        },
        "type": "object",
        "required": [
          "name",
          "address",
          "email",
          "phone"
        ],
        "title": "OrganizationDetailsSchema"
      },
      "OrganizationListSchema": {
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/PaginationResponseSchema"
          },
          "organizations": {
            "items": {
              "$ref": "#/components/schemas/lcfs__web__api__organizations__schema__OrganizationSchema"
            },
            "type": "array",
            "title": "Organizations"
          }
        },
        "type": "object",
        "required": [
          "pagination",
          "organizations"
        ],
        "title": "OrganizationListSchema"
      },
      "OrganizationResponseSchema": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "operatingName": {
            "type": "string",
            "title": "Operatingname"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "edrmsRecord": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Edrmsrecord"
          },
          "orgStatus": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrganizationStatusSchema"
              },
              {
                "type": "null"
              }
            ],
            "default": []
          },
          "orgAddress": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrganizationAddressSchema"
              },
              {
                "type": "null"
              }
            ],
            "default": []
          },
          "orgAttorneyAddress": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrganizationAttorneyAddressSchema"
              },
              {
                "type": "null"
              }
            ],
            "default": []
          }
        },
        "type": "object",
        "required": [
          "name",
          "operatingName"
        ],
        "title": "OrganizationResponseSchema"
      },
      "OrganizationStatusEnum": {
        "type": "string",
        "enum": [
          "Unregistered",
          "Registered",
          "Suspended",
          "Canceled"
        ],
        "title": "OrganizationStatusEnum"
      },
      "OrganizationStatusSchema": {
        "properties": {
          "organizationStatusId": {
            "type": "integer",
            "title": "Organizationstatusid"
          },
          "status": {
            "$ref": "#/components/schemas/OrganizationStatusEnum"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "organizationStatusId",
          "status"
        ],
        "title": "OrganizationStatusSchema"
      },
      "OrganizationSummaryResponseSchema-Input": {
        "properties": {
          "organizationId": {
            "type": "integer",
            "title": "Organizationid"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "operatingName": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Operatingname"
          },
          "totalBalance": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Totalbalance"
          },
          "reservedBalance": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reservedbalance"
          },
          "orgStatus": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrganizationStatusSchema"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "organizationId"
        ],
        "title": "OrganizationSummaryResponseSchema"
      },
      "OrganizationSummaryResponseSchema-Output": {
        "properties": {
          "organizationId": {
            "type": "integer",
            "title": "Organizationid"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "operatingName": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Operatingname"
          },
          "totalBalance": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Totalbalance"
          },
          "reservedBalance": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reservedbalance"
          },
          "orgStatus": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrganizationStatusSchema"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "organizationId"
        ],
        "title": "OrganizationSummaryResponseSchema"
      },
      "OrganizationTypeEnum": {
        "type": "string",
        "enum": [
          "Fuel Supplier",
          "Electricity Supplier",
          "Broker",
          "Utilities (local or public)"
        ],
        "title": "OrganizationTypeEnum"
      },
      "OrganizationTypeSchema": {
        "properties": {
          "organizationTypeId": {
            "type": "integer",
            "title": "Organizationtypeid"
          },
          "orgType": {
            "$ref": "#/components/schemas/OrganizationTypeEnum"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "organizationTypeId",
          "orgType"
        ],
        "title": "OrganizationTypeSchema"
      },
      "OrganizationUpdateSchema": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "operatingName": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Operatingname"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "edrmsRecord": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Edrmsrecord"
          },
          "organizationStatusId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organizationstatusid"
          },
          "organizationTypeId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organizationtypeid"
          },
          "address": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrganizationAddressCreateSchema"
              },
              {
                "type": "null"
              }
            ],
            "default": []
          },
          "attorneyAddress": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrganizationAttorneyAddressCreateSchema"
              },
              {
                "type": "null"
              }
            ],
            "default": []
          }
        },
        "type": "object",
        "title": "OrganizationUpdateSchema"
      },
      "OtherUsesAllSchema": {
        "properties": {
          "otherUses": {
            "items": {
              "$ref": "#/components/schemas/OtherUsesSchema"
            },
            "type": "array",
            "title": "Otheruses"
          }
        },
        "type": "object",
        "required": [
          "otherUses"
        ],
        "title": "OtherUsesAllSchema"
      },
      "OtherUsesCreateSchema": {
        "properties": {
          "otherUsesId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Otherusesid"
          },
          "complianceReportId": {
            "type": "integer",
            "title": "Compliancereportid"
          },
          "quantitySupplied": {
            "type": "integer",
            "title": "Quantitysupplied"
          },
          "fuelType": {
            "type": "string",
            "title": "Fueltype"
          },
          "fuelCategory": {
            "type": "string",
            "title": "Fuelcategory"
          },
          "expectedUse": {
            "type": "string",
            "title": "Expecteduse"
          },
          "units": {
            "type": "string",
            "title": "Units"
          },
          "rationale": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rationale"
          },
          "deleted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted"
          }
        },
        "type": "object",
        "required": [
          "complianceReportId",
          "quantitySupplied",
          "fuelType",
          "fuelCategory",
          "expectedUse",
          "units"
        ],
        "title": "OtherUsesCreateSchema"
      },
      "OtherUsesFuelCategorySchema": {
        "properties": {
          "fuelCategoryId": {
            "type": "integer",
            "title": "Fuelcategoryid"
          },
          "category": {
            "type": "string",
            "title": "Category"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "fuelCategoryId",
          "category"
        ],
        "title": "OtherUsesFuelCategorySchema"
      },
      "OtherUsesListSchema": {
        "properties": {
          "otherUses": {
            "items": {
              "$ref": "#/components/schemas/OtherUsesSchema"
            },
            "type": "array",
            "title": "Otheruses"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationResponseSchema"
          }
        },
        "type": "object",
        "required": [
          "otherUses",
          "pagination"
        ],
        "title": "OtherUsesListSchema"
      },
      "OtherUsesSchema": {
        "properties": {
          "otherUsesId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Otherusesid"
          },
          "complianceReportId": {
            "type": "integer",
            "title": "Compliancereportid"
          },
          "quantitySupplied": {
            "type": "integer",
            "title": "Quantitysupplied"
          },
          "fuelType": {
            "type": "string",
            "title": "Fueltype"
          },
          "fuelCategory": {
            "type": "string",
            "title": "Fuelcategory"
          },
          "expectedUse": {
            "type": "string",
            "title": "Expecteduse"
          },
          "units": {
            "type": "string",
            "title": "Units"
          },
          "rationale": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rationale"
          },
          "deleted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted"
          }
        },
        "type": "object",
        "required": [
          "complianceReportId",
          "quantitySupplied",
          "fuelType",
          "fuelCategory",
          "expectedUse",
          "units"
        ],
        "title": "OtherUsesSchema"
      },
      "OtherUsesTableOptionsSchema": {
        "properties": {
          "fuelCategories": {
            "items": {
              "$ref": "#/components/schemas/OtherUsesFuelCategorySchema"
            },
            "type": "array",
            "title": "Fuelcategories"
          },
          "fuelTypes": {
            "items": {
              "$ref": "#/components/schemas/lcfs__web__api__other_uses__schema__FuelTypeSchema"
            },
            "type": "array",
            "title": "Fueltypes"
          },
          "unitsOfMeasure": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Unitsofmeasure"
          },
          "expectedUses": {
            "items": {
              "$ref": "#/components/schemas/ExpectedUseTypeSchema"
            },
            "type": "array",
            "title": "Expecteduses"
          }
        },
        "type": "object",
        "required": [
          "fuelCategories",
          "fuelTypes",
          "unitsOfMeasure",
          "expectedUses"
        ],
        "title": "OtherUsesTableOptionsSchema"
      },
      "PaginatedAllocationAgreementRequestSchema": {
        "properties": {
          "complianceReportId": {
            "type": "integer",
            "title": "Compliancereportid"
          },
          "filters": {
            "items": {
              "$ref": "#/components/schemas/FilterModel"
            },
            "type": "array",
            "title": "Filters"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "title": "Size"
          },
          "sortOrders": {
            "items": {
              "$ref": "#/components/schemas/SortOrder"
            },
            "type": "array",
            "title": "Sortorders"
          }
        },
        "type": "object",
        "required": [
          "complianceReportId",
          "filters",
          "page",
          "size",
          "sortOrders"
        ],
        "title": "PaginatedAllocationAgreementRequestSchema"
      },
      "PaginatedNotionalTransferRequestSchema": {
        "properties": {
          "complianceReportId": {
            "type": "integer",
            "title": "Compliancereportid"
          },
          "filters": {
            "items": {
              "$ref": "#/components/schemas/FilterModel"
            },
            "type": "array",
            "title": "Filters"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "title": "Size"
          },
          "sortOrders": {
            "items": {
              "$ref": "#/components/schemas/SortOrder"
            },
            "type": "array",
            "title": "Sortorders"
          }
        },
        "type": "object",
        "required": [
          "complianceReportId",
          "filters",
          "page",
          "size",
          "sortOrders"
        ],
        "title": "PaginatedNotionalTransferRequestSchema"
      },
      "PaginatedOtherUsesRequestSchema": {
        "properties": {
          "complianceReportId": {
            "type": "integer",
            "title": "Compliancereportid"
          },
          "filters": {
            "items": {
              "$ref": "#/components/schemas/FilterModel"
            },
            "type": "array",
            "title": "Filters"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "title": "Size"
          },
          "sortOrders": {
            "items": {
              "$ref": "#/components/schemas/SortOrder"
            },
            "type": "array",
            "title": "Sortorders"
          }
        },
        "type": "object",
        "required": [
          "complianceReportId",
          "filters",
          "page",
          "size",
          "sortOrders"
        ],
        "title": "PaginatedOtherUsesRequestSchema"
      },
      "PaginationRequestSchema": {
        "properties": {
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "title": "Size"
          },
          "sortOrders": {
            "items": {
              "$ref": "#/components/schemas/SortOrder"
            },
            "type": "array",
            "title": "Sortorders"
          },
          "filters": {
            "items": {
              "$ref": "#/components/schemas/FilterModel"
            },
            "type": "array",
            "title": "Filters"
          }
        },
        "type": "object",
        "title": "PaginationRequestSchema"
      },
      "PaginationResponseSchema": {
        "properties": {
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "title": "Size"
          },
          "totalPages": {
            "type": "integer",
            "title": "Totalpages"
          }
        },
        "type": "object",
        "required": [
          "total",
          "page",
          "size",
          "totalPages"
        ],
        "title": "PaginationResponseSchema"
      },
      "ProvisionOfTheActSchema": {
        "properties": {
          "provisionOfTheActId": {
            "type": "integer",
            "title": "Provisionoftheactid"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "provisionOfTheActId",
          "name"
        ],
        "title": "ProvisionOfTheActSchema"
      },
      "ReceivedOrTransferredEnumSchema": {
        "type": "string",
        "enum": [
          "Received",
          "Transferred"
        ],
        "title": "ReceivedOrTransferredEnumSchema"
      },
      "RedisValueDTO": {
        "properties": {
          "key": {
            "type": "string",
            "title": "Key"
          },
          "value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value"
          }
        },
        "type": "object",
        "required": [
          "key"
        ],
        "title": "RedisValueDTO",
        "description": "DTO for redis values."
      },
      "RoleSchema": {
        "properties": {
          "roleId": {
            "type": "integer",
            "title": "Roleid"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "displayOrder": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Displayorder"
          },
          "isGovernmentRole": {
            "type": "boolean",
            "title": "Isgovernmentrole"
          }
        },
        "type": "object",
        "required": [
          "roleId",
          "isGovernmentRole"
        ],
        "title": "RoleSchema"
      },
      "SearchFuelCodeList": {
        "properties": {
          "fuelCodes": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "items": {
                  "$ref": "#/components/schemas/FuelCodeCloneSchema"
                },
                "type": "array"
              }
            ],
            "title": "Fuelcodes"
          }
        },
        "type": "object",
        "required": [
          "fuelCodes"
        ],
        "title": "SearchFuelCodeList"
      },
      "SortOrder": {
        "properties": {
          "field": {
            "type": "string",
            "title": "Field"
          },
          "direction": {
            "type": "string",
            "title": "Direction"
          }
        },
        "type": "object",
        "required": [
          "field",
          "direction"
        ],
        "title": "SortOrder"
      },
      "SummarySchema": {
        "properties": {
          "summaryId": {
            "type": "integer",
            "title": "Summaryid"
          },
          "isLocked": {
            "type": "boolean",
            "title": "Islocked"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "summaryId",
          "isLocked"
        ],
        "title": "SummarySchema"
      },
      "TableOptionsSchema": {
        "properties": {
          "fuelTypes": {
            "items": {
              "$ref": "#/components/schemas/lcfs__web__api__fuel_code__schema__FuelTypeSchema"
            },
            "type": "array",
            "title": "Fueltypes"
          },
          "transportModes": {
            "items": {
              "$ref": "#/components/schemas/TransportModeSchema"
            },
            "type": "array",
            "title": "Transportmodes"
          },
          "fuelCodePrefixes": {
            "items": {
              "$ref": "#/components/schemas/FuelCodePrefixSchema"
            },
            "type": "array",
            "title": "Fuelcodeprefixes"
          },
          "latestFuelCodes": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/lcfs__web__api__fuel_code__schema__FuelCodeSchema"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latestfuelcodes"
          },
          "fieldOptions": {
            "$ref": "#/components/schemas/FieldOptions"
          },
          "fpLocations": {
            "items": {
              "$ref": "#/components/schemas/FPLocationsSchema"
            },
            "type": "array",
            "title": "Fplocations"
          },
          "facilityNameplateCapacityUnits": {
            "items": {
              "$ref": "#/components/schemas/FuelTypeQuantityUnitsEnumSchema"
            },
            "type": "array",
            "title": "Facilitynameplatecapacityunits"
          }
        },
        "type": "object",
        "required": [
          "fuelTypes",
          "transportModes",
          "fuelCodePrefixes",
          "latestFuelCodes",
          "fieldOptions",
          "fpLocations",
          "facilityNameplateCapacityUnits"
        ],
        "title": "TableOptionsSchema"
      },
      "TargetCarbonIntensitySchema": {
        "properties": {
          "targetCarbonIntensityId": {
            "type": "integer",
            "title": "Targetcarbonintensityid"
          },
          "targetCarbonIntensity": {
            "type": "number",
            "title": "Targetcarbonintensity"
          },
          "reductionTargetPercentage": {
            "type": "number",
            "title": "Reductiontargetpercentage"
          },
          "fuelCategory": {
            "$ref": "#/components/schemas/FuelCategorySchema"
          },
          "compliancePeriod": {
            "type": "string",
            "title": "Complianceperiod"
          }
        },
        "type": "object",
        "required": [
          "targetCarbonIntensityId",
          "targetCarbonIntensity",
          "reductionTargetPercentage",
          "fuelCategory",
          "compliancePeriod"
        ],
        "title": "TargetCarbonIntensitySchema"
      },
      "TransactionCountsSchema": {
        "properties": {
          "transfers": {
            "type": "integer",
            "title": "Transfers"
          },
          "initiativeAgreements": {
            "type": "integer",
            "title": "Initiativeagreements"
          },
          "adminAdjustments": {
            "type": "integer",
            "title": "Adminadjustments"
          }
        },
        "type": "object",
        "required": [
          "transfers",
          "initiativeAgreements",
          "adminAdjustments"
        ],
        "title": "TransactionCountsSchema"
      },
      "TransactionListSchema": {
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/PaginationResponseSchema"
          },
          "transactions": {
            "items": {
              "$ref": "#/components/schemas/TransactionViewSchema"
            },
            "type": "array",
            "title": "Transactions"
          }
        },
        "type": "object",
        "required": [
          "pagination",
          "transactions"
        ],
        "title": "TransactionListSchema"
      },
      "TransactionStatusEnum": {
        "type": "string",
        "enum": [
          "Draft",
          "Recommended",
          "Sent",
          "Submitted",
          "Approved",
          "Recorded",
          "Refused",
          "Deleted",
          "Declined",
          "Rescinded"
        ],
        "title": "TransactionStatusEnum"
      },
      "TransactionStatusSchema": {
        "properties": {
          "status": {
            "$ref": "#/components/schemas/TransactionStatusEnum"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "TransactionStatusSchema"
      },
      "TransactionViewSchema": {
        "properties": {
          "transactionId": {
            "type": "integer",
            "title": "Transactionid"
          },
          "transactionType": {
            "type": "string",
            "title": "Transactiontype"
          },
          "fromOrganization": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fromorganization"
          },
          "toOrganization": {
            "type": "string",
            "title": "Toorganization"
          },
          "quantity": {
            "type": "integer",
            "title": "Quantity"
          },
          "pricePerUnit": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Priceperunit"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "createDate": {
            "type": "string",
            "format": "date-time",
            "title": "Createdate"
          },
          "updateDate": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedate"
          }
        },
        "type": "object",
        "required": [
          "transactionId",
          "transactionType",
          "toOrganization",
          "quantity",
          "status",
          "createDate",
          "updateDate"
        ],
        "title": "TransactionViewSchema"
      },
      "TransferCategorySchema": {
        "properties": {
          "transferCategoryId": {
            "type": "integer",
            "title": "Transfercategoryid"
          },
          "category": {
            "type": "string",
            "title": "Category"
          }
        },
        "type": "object",
        "required": [
          "transferCategoryId",
          "category"
        ],
        "title": "TransferCategorySchema"
      },
      "TransferCommentSchema": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "TransferCommentSchema"
      },
      "TransferCreateSchema": {
        "properties": {
          "transferId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Transferid"
          },
          "fromOrganizationId": {
            "type": "integer",
            "title": "Fromorganizationid"
          },
          "toOrganizationId": {
            "type": "integer",
            "title": "Toorganizationid"
          },
          "fromTransactionId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fromtransactionid"
          },
          "toTransactionId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Totransactionid"
          },
          "agreementDate": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Agreementdate"
          },
          "quantity": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Quantity"
          },
          "pricePerUnit": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Priceperunit"
          },
          "fromOrgComment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fromorgcomment"
          },
          "toOrgComment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Toorgcomment"
          },
          "govComment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Govcomment"
          },
          "transferCategoryId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Transfercategoryid"
          },
          "currentStatusId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Currentstatusid"
          },
          "currentStatus": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TransferStatusEnum"
              },
              {
                "type": "null"
              }
            ]
          },
          "recommendation": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TransferRecommendationEnumSchema"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "fromOrganizationId",
          "toOrganizationId"
        ],
        "title": "TransferCreateSchema"
      },
      "TransferHistorySchema": {
        "properties": {
          "createDate": {
            "type": "string",
            "format": "date-time",
            "title": "Createdate"
          },
          "transferStatus": {
            "$ref": "#/components/schemas/TransferStatusSchema"
          },
          "userProfile": {
            "$ref": "#/components/schemas/TransferHistoryUserSchema"
          }
        },
        "type": "object",
        "required": [
          "createDate",
          "transferStatus",
          "userProfile"
        ],
        "title": "TransferHistorySchema"
      },
      "TransferHistoryUserSchema": {
        "properties": {
          "firstName": {
            "type": "string",
            "title": "Firstname"
          },
          "lastName": {
            "type": "string",
            "title": "Lastname"
          },
          "organization": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TransferOrganizationSchema"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "firstName",
          "lastName"
        ],
        "title": "TransferHistoryUserSchema"
      },
      "TransferOrganizationSchema": {
        "properties": {
          "organizationId": {
            "type": "integer",
            "title": "Organizationid"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "organizationId",
          "name"
        ],
        "title": "TransferOrganizationSchema"
      },
      "TransferRecommendationEnumSchema": {
        "type": "string",
        "enum": [
          "Record",
          "Refuse"
        ],
        "title": "TransferRecommendationEnumSchema"
      },
      "TransferSchema": {
        "properties": {
          "transferId": {
            "type": "integer",
            "title": "Transferid"
          },
          "fromOrganization": {
            "$ref": "#/components/schemas/TransferOrganizationSchema"
          },
          "toOrganization": {
            "$ref": "#/components/schemas/TransferOrganizationSchema"
          },
          "agreementDate": {
            "type": "string",
            "format": "date",
            "title": "Agreementdate"
          },
          "quantity": {
            "type": "integer",
            "title": "Quantity"
          },
          "pricePerUnit": {
            "type": "number",
            "title": "Priceperunit"
          },
          "comments": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/TransferCommentSchema"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comments"
          },
          "fromOrgComment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fromorgcomment"
          },
          "toOrgComment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Toorgcomment"
          },
          "govComment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Govcomment"
          },
          "currentStatus": {
            "$ref": "#/components/schemas/TransferStatusSchema"
          },
          "transferCategory": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TransferCategorySchema"
              },
              {
                "type": "null"
              }
            ]
          },
          "transferHistory": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/TransferHistorySchema"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Transferhistory"
          },
          "recommendation": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TransferRecommendationEnumSchema"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "transferId",
          "fromOrganization",
          "toOrganization",
          "agreementDate",
          "quantity",
          "pricePerUnit",
          "currentStatus"
        ],
        "title": "TransferSchema"
      },
      "TransferStatusEnum": {
        "type": "string",
        "enum": [
          "Draft",
          "Deleted",
          "Sent",
          "Submitted",
          "Recommended",
          "Recorded",
          "Refused",
          "Declined",
          "Rescinded"
        ],
        "title": "TransferStatusEnum"
      },
      "TransferStatusSchema": {
        "properties": {
          "transferStatusId": {
            "type": "integer",
            "title": "Transferstatusid"
          },
          "status": {
            "type": "string",
            "title": "Status"
          }
        },
        "type": "object",
        "required": [
          "transferStatusId",
          "status"
        ],
        "title": "TransferStatusSchema"
      },
      "TransportModeSchema": {
        "properties": {
          "transportModeId": {
            "type": "integer",
            "title": "Transportmodeid"
          },
          "transportMode": {
            "type": "string",
            "title": "Transportmode"
          }
        },
        "type": "object",
        "required": [
          "transportModeId",
          "transportMode"
        ],
        "title": "TransportModeSchema"
      },
      "UnitOfMeasureSchema": {
        "properties": {
          "uomId": {
            "type": "integer",
            "title": "Uomid"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "uomId",
          "name"
        ],
        "title": "UnitOfMeasureSchema"
      },
      "UserActivitiesResponseSchema": {
        "properties": {
          "activities": {
            "items": {
              "$ref": "#/components/schemas/UserActivitySchema"
            },
            "type": "array",
            "title": "Activities"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationResponseSchema"
          }
        },
        "type": "object",
        "required": [
          "activities",
          "pagination"
        ],
        "title": "UserActivitiesResponseSchema"
      },
      "UserActivitySchema": {
        "properties": {
          "transactionId": {
            "type": "integer",
            "title": "Transactionid"
          },
          "actionTaken": {
            "type": "string",
            "title": "Actiontaken"
          },
          "transactionType": {
            "type": "string",
            "title": "Transactiontype"
          },
          "createDate": {
            "type": "string",
            "format": "date-time",
            "title": "Createdate"
          },
          "userId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Userid"
          }
        },
        "type": "object",
        "required": [
          "transactionId",
          "actionTaken",
          "transactionType",
          "createDate"
        ],
        "title": "UserActivitySchema"
      },
      "UserBaseSchema": {
        "properties": {
          "userProfileId": {
            "type": "integer",
            "title": "Userprofileid"
          },
          "keycloakUsername": {
            "type": "string",
            "title": "Keycloakusername"
          },
          "keycloakEmail": {
            "type": "string",
            "format": "email",
            "title": "Keycloakemail"
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "firstName": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Firstname"
          },
          "lastName": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lastname"
          },
          "isActive": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "string"
              }
            ],
            "title": "Isactive"
          },
          "mobilePhone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mobilephone"
          },
          "organization": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrganizationSummaryResponseSchema-Output"
              },
              {
                "type": "null"
              }
            ]
          },
          "roles": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/RoleSchema"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Roles"
          },
          "isGovernmentUser": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Isgovernmentuser"
          }
        },
        "type": "object",
        "required": [
          "userProfileId",
          "keycloakUsername",
          "keycloakEmail",
          "isActive"
        ],
        "title": "UserBaseSchema",
        "description": "DTO for user values."
      },
      "UserCreateSchema": {
        "properties": {
          "userProfileId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Userprofileid"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "keycloakUsername": {
            "type": "string",
            "title": "Keycloakusername"
          },
          "keycloakEmail": {
            "type": "string",
            "format": "email",
            "title": "Keycloakemail"
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email",
            "default": ""
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "mobilePhone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mobilephone"
          },
          "firstName": {
            "type": "string",
            "title": "Firstname"
          },
          "lastName": {
            "type": "string",
            "title": "Lastname"
          },
          "isActive": {
            "type": "boolean",
            "title": "Isactive"
          },
          "organizationId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organizationid"
          },
          "organization": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrganizationSummaryResponseSchema-Input"
              },
              {
                "type": "null"
              }
            ]
          },
          "roles": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Roles",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "title",
          "keycloakUsername",
          "keycloakEmail",
          "firstName",
          "lastName",
          "isActive"
        ],
        "title": "UserCreateSchema"
      },
      "UsersSchema": {
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/PaginationResponseSchema"
          },
          "users": {
            "items": {
              "$ref": "#/components/schemas/UserBaseSchema"
            },
            "type": "array",
            "title": "Users"
          }
        },
        "type": "object",
        "required": [
          "pagination",
          "users"
        ],
        "title": "UsersSchema"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "lcfs__web__api__admin_adjustment__schema__OrganizationSchema": {
        "properties": {
          "organizationId": {
            "type": "integer",
            "title": "Organizationid"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "organizationId",
          "name"
        ],
        "title": "OrganizationSchema"
      },
      "lcfs__web__api__fuel_code__schema__FuelCodeSchema": {
        "properties": {
          "fuelCodeId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fuelcodeid"
          },
          "fuelStatusId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fuelstatusid"
          },
          "prefixId": {
            "type": "integer",
            "title": "Prefixid"
          },
          "fuelSuffix": {
            "type": "string",
            "title": "Fuelsuffix"
          },
          "company": {
            "type": "string",
            "title": "Company"
          },
          "contactName": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contactname"
          },
          "contactEmail": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contactemail"
          },
          "carbonIntensity": {
            "type": "number",
            "title": "Carbonintensity"
          },
          "edrms": {
            "type": "string",
            "title": "Edrms"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time",
            "title": "Lastupdated"
          },
          "applicationDate": {
            "type": "string",
            "format": "date",
            "title": "Applicationdate"
          },
          "approvalDate": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Approvaldate"
          },
          "effectiveDate": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Effectivedate"
          },
          "expirationDate": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expirationdate"
          },
          "fuelTypeId": {
            "type": "integer",
            "title": "Fueltypeid"
          },
          "feedstock": {
            "type": "string",
            "title": "Feedstock"
          },
          "feedstockLocation": {
            "type": "string",
            "title": "Feedstocklocation"
          },
          "feedstockMisc": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedstockmisc"
          },
          "fuelProductionFacilityCity": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fuelproductionfacilitycity"
          },
          "fuelProductionFacilityProvinceState": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fuelproductionfacilityprovincestate"
          },
          "fuelProductionFacilityCountry": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fuelproductionfacilitycountry"
          },
          "facilityNameplateCapacity": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Facilitynameplatecapacity"
          },
          "facilityNameplateCapacityUnit": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FuelTypeQuantityUnitsEnumSchema"
              },
              {
                "type": "null"
              }
            ]
          },
          "formerCompany": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Formercompany"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "fuelCodeStatus": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/lcfs__web__api__fuel_code__schema__FuelCodeStatusSchema"
              },
              {
                "type": "null"
              }
            ]
          },
          "fuelCodePrefix": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FuelCodePrefixSchema"
              },
              {
                "type": "null"
              }
            ]
          },
          "fuelCodeType": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/lcfs__web__api__fuel_code__schema__FuelTypeSchema"
              },
              {
                "type": "null"
              }
            ]
          },
          "feedstockFuelTransportModes": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/FeedstockFuelTransportModeSchema"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedstockfueltransportmodes"
          },
          "finishedFuelTransportModes": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/FinishedFuelTransportModeSchema"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Finishedfueltransportmodes"
          }
        },
        "type": "object",
        "required": [
          "prefixId",
          "fuelSuffix",
          "company",
          "carbonIntensity",
          "edrms",
          "lastUpdated",
          "applicationDate",
          "fuelTypeId",
          "feedstock",
          "feedstockLocation"
        ],
        "title": "FuelCodeSchema"
      },
      "lcfs__web__api__fuel_code__schema__FuelCodeStatusSchema": {
        "properties": {
          "fuelCodeStatusId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fuelcodestatusid"
          },
          "status": {
            "$ref": "#/components/schemas/FuelCodeStatusEnumSchema"
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "FuelCodeStatusSchema"
      },
      "lcfs__web__api__fuel_code__schema__FuelTypeSchema": {
        "properties": {
          "fuelTypeId": {
            "type": "integer",
            "title": "Fueltypeid"
          },
          "fuelType": {
            "type": "string",
            "title": "Fueltype"
          },
          "fossilDerived": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fossilderived"
          },
          "provision1Id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provision1Id"
          },
          "provision2Id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provision2Id"
          },
          "defaultCarbonIntensity": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Defaultcarbonintensity"
          },
          "provision1": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ProvisionOfTheActSchema"
              },
              {
                "type": "null"
              }
            ]
          },
          "provision2": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ProvisionOfTheActSchema"
              },
              {
                "type": "null"
              }
            ]
          },
          "units": {
            "$ref": "#/components/schemas/FuelTypeQuantityUnitsEnumSchema"
          }
        },
        "type": "object",
        "required": [
          "fuelTypeId",
          "fuelType",
          "units"
        ],
        "title": "FuelTypeSchema"
      },
      "lcfs__web__api__fuel_export__schema__FuelCodeResponseSchema": {
        "properties": {
          "fuelCodeId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fuelcodeid"
          },
          "fuelStatusId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fuelstatusid"
          },
          "fuelStatus": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/lcfs__web__api__fuel_export__schema__FuelCodeStatusSchema"
              },
              {
                "type": "null"
              }
            ]
          },
          "prefixId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prefixid"
          },
          "fuelCode": {
            "type": "string",
            "title": "Fuelcode"
          },
          "carbonIntensity": {
            "type": "number",
            "title": "Carbonintensity"
          }
        },
        "type": "object",
        "required": [
          "fuelCode",
          "carbonIntensity"
        ],
        "title": "FuelCodeResponseSchema"
      },
      "lcfs__web__api__fuel_export__schema__FuelCodeSchema": {
        "properties": {
          "fuelCodeId": {
            "type": "integer",
            "title": "Fuelcodeid"
          },
          "fuelCodePrefixId": {
            "type": "integer",
            "title": "Fuelcodeprefixid"
          },
          "fuelCode": {
            "type": "string",
            "title": "Fuelcode"
          },
          "fuelCodeCarbonIntensity": {
            "type": "number",
            "title": "Fuelcodecarbonintensity"
          }
        },
        "type": "object",
        "required": [
          "fuelCodeId",
          "fuelCodePrefixId",
          "fuelCode",
          "fuelCodeCarbonIntensity"
        ],
        "title": "FuelCodeSchema"
      },
      "lcfs__web__api__fuel_export__schema__FuelCodeStatusSchema": {
        "properties": {
          "fuelCodeStatusId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fuelcodestatusid"
          },
          "status": {
            "type": "string",
            "title": "Status"
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "FuelCodeStatusSchema"
      },
      "lcfs__web__api__fuel_export__schema__FuelTypeOptionsResponse": {
        "properties": {
          "fuelTypes": {
            "items": {
              "$ref": "#/components/schemas/lcfs__web__api__fuel_export__schema__FuelTypeOptionsSchema"
            },
            "type": "array",
            "title": "Fueltypes"
          }
        },
        "type": "object",
        "required": [
          "fuelTypes"
        ],
        "title": "FuelTypeOptionsResponse"
      },
      "lcfs__web__api__fuel_export__schema__FuelTypeOptionsSchema": {
        "properties": {
          "fuelTypeId": {
            "type": "integer",
            "title": "Fueltypeid"
          },
          "fuelType": {
            "type": "string",
            "title": "Fueltype"
          },
          "fossilDerived": {
            "type": "boolean",
            "title": "Fossilderived"
          },
          "defaultCarbonIntensity": {
            "type": "number",
            "title": "Defaultcarbonintensity"
          },
          "unit": {
            "type": "string",
            "title": "Unit"
          },
          "energyDensity": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EnergyDensitySchema"
              },
              {
                "type": "null"
              }
            ]
          },
          "provisions": {
            "items": {
              "$ref": "#/components/schemas/ProvisionOfTheActSchema"
            },
            "type": "array",
            "title": "Provisions"
          },
          "fuelCategories": {
            "items": {
              "$ref": "#/components/schemas/FuelCategorySchema"
            },
            "type": "array",
            "title": "Fuelcategories"
          },
          "eerRatios": {
            "items": {
              "$ref": "#/components/schemas/EnergyEffectivenessRatioSchema"
            },
            "type": "array",
            "title": "Eerratios"
          },
          "targetCarbonIntensities": {
            "items": {
              "$ref": "#/components/schemas/TargetCarbonIntensitySchema"
            },
            "type": "array",
            "title": "Targetcarbonintensities"
          },
          "fuelCodes": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/lcfs__web__api__fuel_export__schema__FuelCodeSchema"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fuelcodes",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "fuelTypeId",
          "fuelType",
          "fossilDerived",
          "defaultCarbonIntensity",
          "unit",
          "energyDensity",
          "provisions",
          "fuelCategories",
          "eerRatios",
          "targetCarbonIntensities"
        ],
        "title": "FuelTypeOptionsSchema"
      },
      "lcfs__web__api__fuel_export__schema__FuelTypeSchema": {
        "properties": {
          "fuelTypeId": {
            "type": "integer",
            "title": "Fueltypeid"
          },
          "fuelType": {
            "type": "string",
            "title": "Fueltype"
          },
          "fossilDerived": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fossilderived"
          },
          "provision1Id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provision1Id"
          },
          "provision2Id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provision2Id"
          },
          "defaultCarbonIntensity": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Defaultcarbonintensity"
          },
          "units": {
            "$ref": "#/components/schemas/FuelTypeQuantityUnitsEnumSchema"
          }
        },
        "type": "object",
        "required": [
          "fuelTypeId",
          "fuelType",
          "units"
        ],
        "title": "FuelTypeSchema"
      },
      "lcfs__web__api__fuel_supply__schema__FuelCodeResponseSchema": {
        "properties": {
          "fuelCodeId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fuelcodeid"
          },
          "fuelStatusId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fuelstatusid"
          },
          "fuelStatus": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/lcfs__web__api__fuel_supply__schema__FuelCodeStatusSchema"
              },
              {
                "type": "null"
              }
            ]
          },
          "prefixId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prefixid"
          },
          "fuelCode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fuelcode"
          },
          "carbonIntensity": {
            "type": "number",
            "title": "Carbonintensity"
          }
        },
        "type": "object",
        "required": [
          "fuelCode",
          "carbonIntensity"
        ],
        "title": "FuelCodeResponseSchema"
      },
      "lcfs__web__api__fuel_supply__schema__FuelCodeSchema": {
        "properties": {
          "fuelCodeId": {
            "type": "integer",
            "title": "Fuelcodeid"
          },
          "fuelCodePrefixId": {
            "type": "integer",
            "title": "Fuelcodeprefixid"
          },
          "fuelCode": {
            "type": "string",
            "title": "Fuelcode"
          },
          "fuelCodeCarbonIntensity": {
            "type": "number",
            "title": "Fuelcodecarbonintensity"
          }
        },
        "type": "object",
        "required": [
          "fuelCodeId",
          "fuelCodePrefixId",
          "fuelCode",
          "fuelCodeCarbonIntensity"
        ],
        "title": "FuelCodeSchema"
      },
      "lcfs__web__api__fuel_supply__schema__FuelCodeStatusSchema": {
        "properties": {
          "fuelCodeStatusId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fuelcodestatusid"
          },
          "status": {
            "type": "string",
            "title": "Status"
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "FuelCodeStatusSchema"
      },
      "lcfs__web__api__fuel_supply__schema__FuelTypeOptionsResponse": {
        "properties": {
          "fuelTypes": {
            "items": {
              "$ref": "#/components/schemas/lcfs__web__api__fuel_supply__schema__FuelTypeOptionsSchema"
            },
            "type": "array",
            "title": "Fueltypes"
          }
        },
        "type": "object",
        "required": [
          "fuelTypes"
        ],
        "title": "FuelTypeOptionsResponse"
      },
      "lcfs__web__api__fuel_supply__schema__FuelTypeOptionsSchema": {
        "properties": {
          "fuelTypeId": {
            "type": "integer",
            "title": "Fueltypeid"
          },
          "fuelType": {
            "type": "string",
            "title": "Fueltype"
          },
          "fossilDerived": {
            "type": "boolean",
            "title": "Fossilderived"
          },
          "defaultCarbonIntensity": {
            "type": "number",
            "title": "Defaultcarbonintensity"
          },
          "unit": {
            "type": "string",
            "title": "Unit"
          },
          "unrecognized": {
            "type": "boolean",
            "title": "Unrecognized"
          },
          "energyDensity": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EnergyDensitySchema"
              },
              {
                "type": "null"
              }
            ]
          },
          "provisions": {
            "items": {
              "$ref": "#/components/schemas/ProvisionOfTheActSchema"
            },
            "type": "array",
            "title": "Provisions"
          },
          "fuelCategories": {
            "items": {
              "$ref": "#/components/schemas/FuelCategorySchema"
            },
            "type": "array",
            "title": "Fuelcategories"
          },
          "eerRatios": {
            "items": {
              "$ref": "#/components/schemas/EnergyEffectivenessRatioSchema"
            },
            "type": "array",
            "title": "Eerratios"
          },
          "targetCarbonIntensities": {
            "items": {
              "$ref": "#/components/schemas/TargetCarbonIntensitySchema"
            },
            "type": "array",
            "title": "Targetcarbonintensities"
          },
          "fuelCodes": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/lcfs__web__api__fuel_supply__schema__FuelCodeSchema"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fuelcodes",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "fuelTypeId",
          "fuelType",
          "fossilDerived",
          "defaultCarbonIntensity",
          "unit",
          "unrecognized",
          "energyDensity",
          "provisions",
          "fuelCategories",
          "eerRatios",
          "targetCarbonIntensities"
        ],
        "title": "FuelTypeOptionsSchema"
      },
      "lcfs__web__api__fuel_supply__schema__FuelTypeSchema": {
        "properties": {
          "fuelTypeId": {
            "type": "integer",
            "title": "Fueltypeid"
          },
          "fuelType": {
            "type": "string",
            "title": "Fueltype"
          },
          "fossilDerived": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fossilderived"
          },
          "provision1Id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provision1Id"
          },
          "provision2Id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provision2Id"
          },
          "defaultCarbonIntensity": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Defaultcarbonintensity"
          },
          "units": {
            "$ref": "#/components/schemas/FuelTypeQuantityUnitsEnumSchema"
          }
        },
        "type": "object",
        "required": [
          "fuelTypeId",
          "fuelType",
          "units"
        ],
        "title": "FuelTypeSchema"
      },
      "lcfs__web__api__initiative_agreement__schema__OrganizationSchema": {
        "properties": {
          "organizationId": {
            "type": "integer",
            "title": "Organizationid"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "organizationId",
          "name"
        ],
        "title": "OrganizationSchema"
      },
      "lcfs__web__api__organizations__schema__OrganizationSchema": {
        "properties": {
          "organizationId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organizationid"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "operatingName": {
            "type": "string",
            "title": "Operatingname"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "edrmsRecord": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Edrmsrecord"
          },
          "totalBalance": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Totalbalance"
          },
          "reservedBalance": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reservedbalance"
          },
          "organizationStatusId": {
            "type": "integer",
            "title": "Organizationstatusid"
          },
          "organizationTypeId": {
            "type": "integer",
            "title": "Organizationtypeid"
          },
          "organizationAddressId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organizationaddressid"
          },
          "organizationAttorneyAddressId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organizationattorneyaddressid"
          },
          "orgType": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrganizationTypeSchema"
              },
              {
                "type": "null"
              }
            ],
            "default": []
          },
          "orgStatus": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrganizationStatusSchema"
              },
              {
                "type": "null"
              }
            ],
            "default": []
          }
        },
        "type": "object",
        "required": [
          "name",
          "operatingName",
          "organizationStatusId",
          "organizationTypeId"
        ],
        "title": "OrganizationSchema"
      },
      "lcfs__web__api__other_uses__schema__FuelTypeSchema": {
        "properties": {
          "fuelTypeId": {
            "type": "integer",
            "title": "Fueltypeid"
          },
          "fuelType": {
            "type": "string",
            "title": "Fueltype"
          },
          "fossilDerived": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fossilderived"
          },
          "provision1Id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provision1Id"
          },
          "provision2Id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provision2Id"
          },
          "defaultCarbonIntensity": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Defaultcarbonintensity"
          },
          "provision1": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ProvisionOfTheActSchema"
              },
              {
                "type": "null"
              }
            ]
          },
          "provision2": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ProvisionOfTheActSchema"
              },
              {
                "type": "null"
              }
            ]
          },
          "units": {
            "$ref": "#/components/schemas/FuelTypeQuantityUnitsEnumSchema"
          }
        },
        "type": "object",
        "required": [
          "fuelTypeId",
          "fuelType",
          "units"
        ],
        "title": "FuelTypeSchema"
      }
    }
  }
}