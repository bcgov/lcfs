name: Teams Notification

on:
  workflow_run:
    workflows: ["Testing pipeline"] # Add all workflows to wait for completion
    types: [completed]

permissions:
  actions: read
  contents: read
  pull-requests: read

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Microsoft Teams Notification
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const event = context.eventName;
            const payload = context.payload;
            const run = payload.workflow_run;
            const octokit = github.rest;

            // Get associated PR information
            async function getPrInfoFromWorkflowRun(run) {
              try {
                const response = await octokit.repos.listPullRequestsAssociatedWithCommit({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  commit_sha: run.head_sha
                });

                if (response.data.length > 0) {
                  const pr = response.data[0];
                  return {
                    number: pr.number,
                    title: pr.title,
                    url: pr.html_url,
                    author: pr.user.login,
                    avatar: pr.user.avatar_url
                  };
                }
                return null;
              } catch (error) {
                console.log(`Error finding PR for workflow: ${error}`);
                return null;
              }
            }

            const prInfo = await getPrInfoFromWorkflowRun(run);
            let message = "";
            let color = "";
            let threadId = "";

            if (prInfo) {
              threadId = `pr-${prInfo.number}`;
              const { number, title, url, author, avatar } = prInfo;

              if (run.conclusion === 'success') {
                message = `✅ **All tests passed** for PR #${number}: **${title}**`;
                color = "2CBE4E"; // Green
              } else if (run.conclusion === 'failure') {
                message = `❌ **Tests failed** for PR #${number}: **${title}**`;
                color = "D73A49"; // Red
              } else {
                message = `⚠️ **Workflow completed** for PR #${number}: **${title}** with status: ${run.conclusion}`;
                color = "FBAB19"; // Orange
              }

              const card = {
                "@type": "MessageCard",
                "@context": "http://schema.org/extensions",
                "themeColor": color,
                "summary": `GitHub Notification for PR #${number}`,
                "sections": [
                  {
                    "activityTitle": `GitHub Notification for PR #${number}`,
                    "activitySubtitle": `Repository: ${context.repo.owner}/${context.repo.repo}`,
                    "activityImage": avatar, 
                    "facts": [
                      { "name": "Pull Request", "value": `[#${number} - ${title}](${url})` },
                      { "name": "Author", "value": `[${author}](https://github.com/${author})` },
                      { "name": "Workflow Status", "value": `${run.conclusion}` },
                      { "name": "Completed At", "value": `${new Date(run.updated_at).toLocaleString()}` }
                    ],
                    "markdown": true
                  }
                ],
                "potentialAction": [
                  {
                    "@type": "OpenUri",
                    "name": "View PR",
                    "targets": [{ "os": "default", "uri": url }]
                  },
                  {
                    "@type": "OpenUri",
                    "name": "View Workflow Logs",
                    "targets": [{ "os": "default", "uri": run.html_url }]
                  }
                ],
                "correlationId": threadId
              };

              // Send notification to Teams
              const webhookUrl = process.env.TEAMS_WEBHOOK_URL;
              const https = require('https');
              const url = new URL(webhookUrl);

              const options = {
                hostname: url.hostname,
                path: url.pathname + url.search,
                method: 'POST',
                headers: { 'Content-Type': 'application/json' }
              };

              const req = https.request(options, (res) => {
                console.log(`Teams notification status: ${res.statusCode}`);
                res.on('data', (chunk) => console.log(`Response: ${chunk}`));
              });

              req.on('error', (error) => {
                console.error(`Error sending Teams notification: ${error}`);
                core.setFailed(`Failed to send Teams notification: ${error.message}`);
              });

              req.write(JSON.stringify(card));
              req.end();
            } else {
              console.log('No associated PR found for this workflow run.');
            }
        env:
          TEAMS_WEBHOOK_URL: ${{ secrets.TEAMS_WEBHOOK_URL }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
