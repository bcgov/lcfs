name: Cypress Daily

on:
  schedule:
    - cron: '0 16 * * *'  # Runs daily at 16:00 UTC (8 AM PST)
  workflow_dispatch:      # Allows manual triggering of the workflow

jobs:
  cypress:
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:14.2
        env:
          POSTGRES_DB: lcfs
          POSTGRES_USER: lcfs
          POSTGRES_PASSWORD: development_only
        ports:
          - 5432:5432
      redis:
        image: bitnami/redis:6.2.5
        env:
          ALLOW_EMPTY_PASSWORD: "yes"
        ports:
          - 6379:6379
      rabbitmq:
        image: rabbitmq:3-management
        env:
          RABBITMQ_DEFAULT_USER: lcfs
          RABBITMQ_DEFAULT_PASS: development_only
          RABBITMQ_DEFAULT_VHOST: lcfs
        ports:
          - "15672:15672"
    steps:
      - uses: actions/checkout@v2

      - name: Build and Run Backend Service
        run: |
          docker build -t backend-service -f ./backend/Dockerfile ./backend
          docker run -d --name backend \
            --network=host \
            -e LCFS_DB_HOST=localhost \
            -e LCFS_REDIS_HOST=localhost \
            backend-service

      - name: Wait for DB to be Ready
        run: sleep 20

      - name: Run Alembic Migrations
        run: docker exec backend poetry run alembic upgrade head

      - name: Data Seeding
        run: docker exec backend poetry run python /app/lcfs/db/seeders/seed_database.py

      - name: Build and Run Frontend Service
        run: |
          docker build -t frontend-service -f ./frontend/Dockerfile.dev ./frontend
          docker run -d --name frontend \
            --network=host \
            frontend-service

      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          browser: chrome
          wait-on: 'http://localhost:3000'
          wait-on-timeout: 60
          record: false
          config-file: cypress.config.js  # Adjust if your config file is located elsewhere
          working-directory: frontend
        env:
          IDIR_TEST_USER: ${{ secrets.CYPRESS_IDIR_TEST_USER }}
          IDIR_TEST_PASS: ${{ secrets.CYPRESS_IDIR_TEST_PASS }}
          BCEID_TEST_USER: ${{ secrets.CYPRESS_BCEID_TEST_USER }}
          BCEID_TEST_PASS: ${{ secrets.CYPRESS_BCEID_TEST_PASS }}

      - name: Cleanup
        if: always()
        run: |
          docker stop backend frontend
          docker rm backend frontend
