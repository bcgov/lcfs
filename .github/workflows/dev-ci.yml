## For each release, the value of workflow name, branches and PR_NUMBER need to be adjusted accordingly

name: LCFS Dev CI

on:
  push:
    branches: [ release-0.2.0 ]
    paths:
      - frontend/**
      - backend/**
  workflow_dispatch:
  workflow_call:

env:
  ## The pull request number of the Tracking pull request to merge the release branch to main
  VERSION: 0.2.0
  GIT_URL: https://github.com/bcgov/lcfs.git 
  TOOLS_NAMESPACE: ${{ secrets.OPENSHIFT_NAMESPACE_PLATE }}-tools
  DEV_NAMESPACE: ${{ secrets.OPENSHIFT_NAMESPACE_PLATE }}-dev


concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true  

jobs:

  build:

    name: Build LCFS
    runs-on: ubuntu-latest
    timeout-minutes: 60

    outputs:
      PRE_RELEASE: ${{ steps.set-pre-release.outputs.PRE_RELEASE}}

    steps:

      - name: Check out repository
        uses: actions/checkout@v3

      - name: Log in to Openshift
        uses: redhat-actions/oc-login@v1.2
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
          insecure_skip_tls_verify: true
          namespace: ${{ env.TOOLS_NAMESPACE }}

      - name: Calculate the PRE_RELEASE
        id: set-pre-release
        run: |
          export PRE_RELEASE=$(date +'%Y%m%d%H%M%S')
          echo "PRE_RELEASE=${PRE_RELEASE}" >> $GITHUB_ENV

      - name: show pre release
        run: |
          echo "PRE_RELEASE: $PRE_RELEASE"

      # - name: Build LCFS Backend
      #   run: |
      #     cd openshift/templates
      #     oc process -f ./backend-bc.yaml VERSION=${{ env.VERSION }}-$PRE_RELEASE GIT_URL=${{ env.GIT_URL }} GIT_REF=release-${{ env.VERSION }} | oc apply --wait=true -f - -n ${{ env.TOOLS_NAMESPACE }}
      #     oc start-build --wait=true lcfs-backend-${{ env.VERSION }}-$PRE_RELEASE
      #     oc tag ${{ env.TOOLS_NAMESPACE }}/lcfs-backend:${{ env.VERSION }}-$PRE_RELEASE ${{ env.DEV_NAMESPACE }}/lcfs-backend:${{ env.VERSION }}-$PRE_RELEASE

      # - name: Build LCFS Frontend
      #   run: |
      #     cd openshift/templates
      #     oc process -f ./frontend-bc.yaml VERSION=${{ env.VERSION }}-$PRE_RELEASE GIT_URL=${{ env.GIT_URL }} GIT_REF=release-${{ env.VERSION }} | oc apply --wait=true -f - -n ${{ env.TOOLS_NAMESPACE }}
      #     oc start-build --wait=true lcfs-frontend-${{ env.VERSION }}-$PRE_RELEASE
      #     oc tag ${{ env.TOOLS_NAMESPACE }}/lcfs-frontend:${{ env.VERSION }}-$PRE_RELEASE ${{ env.DEV_NAMESPACE }}/lcfs-frontend:${{ env.VERSION }}-$PRE_RELEASE

  Deploy:

    name: Deploy LCFS
    runs-on: ubuntu-latest
    timeout-minutes: 60
    needs: build

    steps:
      
      - name: Checkout Manifest repository
        uses: actions/checkout@v3
        with:
          repository: bcgov-c/tenant-gitops-d2bd59
          ref: main
          ssh-key: ${{ secrets.MANIFEST_REPO_DEPLOY_KEY }}

      - name: show pre release
        run: |
          echo "PRE_RELEASE: ${{ needs.build.outputs.PRE_RELEASE }}"
      
      - name: Update tag
        uses: mikefarah/yq@v4.40.5
        with:
            cmd: yq '.image.tag = ${{ env.VERSION }}-${{ needs.build.outputs.PRE_RELEASE }}' lcfs/charts/lcfs-frontend/values-dev.yaml
    
      - name: Check Changed value
        run: |
          cat lcfs/charts/lcfs-frontend/values-dev.yaml